{"version":3,"sources":["core/contexts/auth/auth.context.ts","core/config/firebase.config.ts","utils/customer-hook/useStroage.ts","utils/customer-hook/useAuth.tsx","shared/auth-provider.tsx","core/enums/control-panel.ts","core/enums/main-path.ts","core/constants/storage.constants.ts","core/models/selection.ts","core/models/crystal.ts","core/models/crystal-ring.ts","core/models/file-info.ts","core/contexts/crystalShowroom/selected-list.context.ts","core/contexts/crystalShowroom/crystalShowroom.action.ts","shared/loading-bar.tsx","core/enums/orderby.ts","utils/customer-hook/useHttpClient.ts","utils/customer-hook/useInfiniteList.tsx","shared/infiniteList.tsx","crystal-showroom/components/charm-adder.tsx","crystal-showroom/components/flower-adder.tsx","shared/redio-group.tsx","crystal-showroom/components/control-panel.tsx","shared/bead.tsx","shared/product.tsx","crystal-showroom/components/product-container.tsx","crystal-showroom/index.tsx","core/enums/form.enum.ts","crystal-dashboard/components/dashboard-navigation.tsx","shared/form-error-msg.tsx","styles/components/button.ts","styles/components/form.ts","styles/components/table.ts","core/models/form.ts","utils/customer-hook/useFormError.ts","utils/transofrm/ramda-utilis.ts","utils/customer-hook/useFormValidate.ts","crystal-dashboard/components/handsize-form.tsx","crystal-dashboard/components/sliver-pipe-form.tsx","core/constants/constants.ts","shared/progress-bar.tsx","styles/layout/grid.ts","core/models/fileLink.ts","utils/customer-hook/useUploadFileStatus.ts","utils/transofrm/list-utilis.ts","shared/upload-area.tsx","utils/customer-hook/useDragFile.ts","utils/customer-hook/useImageReader.tsx","crystal-dashboard/components/upload-image-form.tsx","core/models/allow-user.ts","crystal-dashboard/components/allowlist-control.tsx","core/constants/form.constants.ts","crystal-dashboard/components/crystal-product-list.tsx","crystal-dashboard/index.tsx","login/user-login.tsx","utils/customer-hook/userKey.tsx","login/employee-login.tsx","shared/complete-page.tsx","shared/auth-router.tsx","App.tsx","index.tsx"],"names":["authContext","React","createContext","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","realtimeDB","database","storageRef","storage","ref","useStorage","setSession","name","object","objectParsing","JSON","stringify","sessionStorage","setItem","getSession","getItem","parse","useAuth","useContext","AccessRight","accessRight","adminToken","isUser","this","AuthProvider","props","children","authProvider","userState","tokenRef","useRef","useState","isAdmin","setIsAdmin","setIsUser","useEffect","unsubscribe","auth","onAuthStateChanged","user","current","Promise","resolve","then","getIdToken","token","adminLogin","email","password","reject","setPersistence","Auth","Persistence","LOCAL","signInWithEmailAndPassword","userCredential","console","log","id","catch","error","userLogin","account","child","get","adminLogout","signOut","e","warn","userLogout","useProvideAuth","Provider","value","ControlPanelState","MainPath","USER","SelectedItem","url","key","text","isSelected","uuidv4","HandSize","count","radiusWidth","crystalCount","beadSize","SliverPipe","Crystal","leftFlower","rightFlower","charm","CrystalRing","handSize","sliverPipe","beads","createdAt","createTime","generateBeads","Array","fill","map","FileInfo","fileInfo","undefined","INIT_CRYSTAL_SHOWROOM","UPDATED_SELECTED_BEAD","SELECT_DISPLAY_CRYSTAL_BEAD","REMOVE_DISPLAY_SELECTED_CRYSTAL_BEAD","ADD_FLOWER_COVER_ON_LEFT","ADD_FLOWER_COVER_ON_RIGHT","REMOVE_FLOWER","ADD_CHARM","REMOVE_CHARM","SELECT_SLIVER_PIPE","SELECT_HAND_SIZE","crystalShowroomInitState","crystalRing","selectedDisplayCrystal","isFillCrystal","dispatch","crystalShowroomContext","crystalShowroomReducer","state","action","type","setHandSize","data","createBeads","Object","assign","selectedCrystals","bead","includes","setBeads","flower","setSliverPipe","newBeads","item","isFill","every","concat","filter","selectedSliverPipe","currentCrystalRing","newBeadsCount","updateSelectedCrystal","updateSelectHandSize","updateSelectSliverHand","updateFlowerCover","removeFlowerCover","updateCharm","removeCharm","bounceDelay","keyframes","LoadingAnimation","styled","div","scale","LoadingBar","className","OrderBy","useHttpClient","tableName","isReadData","orderBy","isLoading","setIsLoading","tableRef","list","setList","listRef","getList","limitCount","currentList","idRef","lastTimeStamp","length","filterRef","orderByChild","startAfter","limitToFirst","once","snapshot","exists","dataList","entries","val","forEach","entry","by","Desc","reverse","off","post","path","apiPath","push","newObject","set","remove","patch","update","on","childSnapshot","useInfiniteList","observeElement","rootElement","mutationElement","isComplete","setIsComplete","isIntersection","isSending","getPage","a","intersection","mutation","element","intersectionObserver","IntersectionObserver","isIntersecting","root","observe","observeIntersection","mutationObserver","MutationObserver","mutations","isListChange","addedNodes","nodeName","childList","subtree","observeMutation","disconnect","InfiniteLayout","ul","layout","css","InfiniteItem","li","Container","InfiniteList","openSelect","openRemove","updateSelect","removeSelect","selected","setSelected","anchor","setAnchor","viewport","setViewport","setMutationElement","updateSelectItem","onClick","src","removeSelectedItem","CharmAdder","addCharm","FlowerAdder","updateLeft","updateRight","removeFlower","RadioGroup","groupName","defaultValue","updateRadio","RadioItem","htmlFor","checked","onChange","ControlPanel","currentState","setCurrentState","handSizes","sliverPipes","phone","history","useHistory","initCrystalRing","FlowerCover","Charm","prevState","disabled","setCreatedTime","ServerValue","TIMESTAMP","CompletePage","BeadDisplay","top","left","radius","angular","isEmpty","isClicked","Flower","img","attrs","isLeft","Bead","setIsClicked","preState","newState","onSelectBead","ProductDisplay","disabledEvent","ProductInnerBorder","Product","itemPosition","selectedList","containerX","containerY","circleAngular","circleHeight","Math","PI","index","sin","cos","generateCrystalBeads","ProductContainer","Showroom","ControlPanelContainer","CrystalShowroom","FormControlType","FormErrorType","useReducer","DashboardNavigation","navigation","currentUrl","style","flex","nav","activeClassName","to","EmployeeLogin","Warning","FormErrorMsg","errMsg","Format","Required","Integer","Account","Button1","button","SlideButton","FormField","label","Form1","form","direction","borderColor","Table","Phone","Name","CrystalCount","NotAssign","FormControl","checkRequired","fieldName","currentTarget","isError","validity","valueMissing","checkInteger","stepMismatch","useFormErrorMsg","initialState","reducer","isEmptyOrNil","R","isNotEmptyOrNil","useFormCheckValidate","dependencies","validate","setValidate","valid","field","copy","values","HandSizeForm","setName","crystalSize","setCrystalSize","setCrystalCount","setErrMsg","onInput","required","parseInt","step","Number","v","SliverPipeForm","DASHBOARD_NAVIGATION","AllowList","CrystalProductList","CrystalBeadForm","FlowerCoverForm","CharmForm","ProgressAnimation","Bar","ProgressBar","percent","width","Grid","FileUploadStatusType","FileLink","FileUploadStatus","uploadStatus","isStart","isUploading","isCompleted","progress","completedList","failList","fillUUIDToArray","Uploader","UploaderOverlay","EmptyCell","WhiteBoard","GridItem","UploadArea","uploadedFilesRef","gridWidth","gridHeight","emptyList","setEmptyList","imageUrls","setImageUrls","selectedImage","setSelectedImage","uploadAreaRef","setUploadAreaRef","targetElement","isDragging","setIsDragging","files","setFiles","handlerDragEnter","useCallback","event","preventDefault","handlerDragLeave","handlerDragOver","handlerFileDrop","stopPropagation","dataTransfer","addEventListener","removeEventListener","useDragFiles","readFile","file","reader","FileReader","onload","target","result","readAsDataURL","Start","Running","stateCompletedList","actionCompletedList","newCompletedList","round","status","setUploadStatus","onUploadFile","task","put","contentType","fileRef","getDownloadURL","completeFile","readImage","from","image","urls","height","multiple","right","prev","newImages","imageUrl","empty","removeUploadImage","dragFiles","normalFiles","UploadImageForm","delete","AllowUser","activate","AllowListController","setPhone","customerName","setCustomerName","updateStatus","pattern","patternMismatch","checkFormat","User","SORT","allowList","products","activeUser","setActiveUser","activeIndex","setActiveIndex","time","slide","find","selectUser","Date","toLocaleString","CrystalDashboard","useRouteMatch","exact","UserLogin","phoneNumber","setPhoneNumber","enter","callback","code","onVerifiedUser","snapShot","isAuthError","onKeyPress","NovusLogo","setEmail","setPassword","onAuthVerified","isAccountError","pathname","redirect","setRedirect","setTimeout","UserRoute","rest","render","location","AdminRoute","App","document","getElementById"],"mappings":"mLAGaA,EAAcC,IAAMC,cAAc,I,uBCU/CC,IAASC,cAXc,CACrBC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,wDACbC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKV,IAAMC,EAAaV,IAASW,WACtBC,EAAaZ,IAASa,UAAUC,MChB9B,SAASC,IAUtB,MAAO,CAAEC,WATU,SAACC,EAAcC,GAChC,IAAMC,EAAgBC,KAAKC,UAAUH,GACrCI,eAAeC,QAAQN,EAAME,IAOVK,WAJF,SAAIP,GAA4B,IAAD,EAChD,OAAOK,eAAeG,QAAQR,GAAQG,KAAKM,MAAL,UAAWJ,eAAeG,QAAQR,UAAlC,QAA2C,IAAM,OCApF,IAAMU,EAAU,kBAAMC,qBAAW/B,IAElCgC,EAIJ,WAAYC,GAA4B,IAAD,6BAHvCC,gBAGuC,OAFvCC,YAEuC,EACrCC,KAAKF,WAAL,iBAAkBD,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAaC,kBAA/B,QAA6C,KAC7CE,KAAKD,OAAL,iBAAcF,QAAd,IAAcA,OAAd,EAAcA,EAAaE,cAA3B,U,OCZG,SAASE,EAAaC,GAAmD,IACtEC,EAAaD,EAAbC,SACFC,EDcsB,WAAa,IAAD,IACLtB,IAA3BS,EADgC,EAChCA,WAAYR,EADoB,EACpBA,WADoB,YAGtCQ,EAAwB,sBAHc,QAGI,IAAIK,EAAY,CAAEE,WAAY,KAAMC,QAAQ,IADhFD,EAFgC,EAEhCA,WAAoBO,EAFY,EAEpBN,OAGdO,EAAWC,iBAAOT,GALgB,EAMVU,qBAAoBV,GANV,mBAMjCW,EANiC,KAMxBC,EANwB,OAOZF,mBAAkBH,GAPN,mBAOjCN,EAPiC,KAOzBY,EAPyB,KAuGxC,OA9FAC,qBAAU,WACR,IAAMC,EAAc9C,IAAS+C,OAAOC,oBAAmB,SAACC,GACjDV,EAASW,SACZP,GAAW,GAGbQ,QAAQC,QAAQH,GACbI,MAAK,SAACJ,GAKL,OAJKA,GACHN,GAAW,GAGb,OAAOM,QAAP,IAAOA,OAAP,EAAOA,EAAMK,gBAEdD,MAAK,SAACE,GACLZ,EAAWY,IAAUhB,EAASW,SAC9BK,IAAUhB,EAASW,SAAWlC,EAAW,cAAe,IAAIa,EAAY,CAAEE,WAAY,KAAMC,QAAQ,WAI1G,OAAO,kBAAMc,OACZ,IAyEI,CAAEJ,UAASV,SAAQwB,WAvEP,SAACC,EAAeC,GACjC,OAAO,IAAIP,SAAQ,SAACC,EAASO,GAC3B3D,IACG+C,OACAa,eAAe5D,IAAS+C,KAAKc,KAAKC,YAAYC,OAC9CV,MAAK,WACJrD,IACG+C,OACAiB,2BAA2BP,EAAOC,GAClCL,MAAK,SAACY,GAAoB,IAAD,EAKxB,OAJAtB,GAAW,GACXC,GAAU,GAEVsB,QAAQC,IAAIF,EAAehB,MAC3B,UAAOgB,EAAehB,YAAtB,aAAO,EAAqBK,gBAE7BD,MAAK,SAACe,GACLA,IAAO7B,EAASW,QAAUkB,GAC1BA,GAAMpD,EAAW,cAAe,IAAIa,EAAY,CAAEE,WAAYqC,EAAIpC,QAAQ,KAC1EoB,EAAQgB,MAETC,OAAM,SAACC,GAAD,OAAWX,EAAOW,aAkDGC,UA3BpB,SAACC,GACjB,OAAO,IAAIrB,SAAQ,SAACC,EAASO,GAC3BjD,EACGI,IAAI,aACJ2D,MAAMD,GACNE,MACArB,MAAK,SAACY,GACLtB,GAAW,GACXC,GAAU,GACV5B,EAAW,cAAe,IAAIa,EAAY,CAAEE,WAAY,KAAMC,QAAQ,KACtEoB,EAAQa,MAETI,OAAM,SAACC,GACNX,EAAOW,UAckCK,YA7C7B,WAClB,OAAO,IAAIxB,SAAQ,SAACC,EAASO,GAC3B3D,IACG+C,OACA6B,UACAvB,MAAK,WACJV,GAAW,GACXC,GAAU,GACV5B,EAAW,cAAe,IAAIa,EAAY,CAAEE,WAAY,KAAMC,QAAQ,KACtEoB,EAAQ,cAETiB,OAAM,SAACQ,GACNX,QAAQY,KAAKD,GACblB,EAAO,uBAgC+CoB,WAT3C,WACjB,OAAO,IAAI5B,SAAQ,SAACC,EAASO,GAC3BhB,GAAW,GACXC,GAAU,GACV5B,EAAW,cAAe,IAAIa,EAAY,CAAEE,WAAY,KAAMC,QAAQ,KACtEoB,EAAQ,gBCjHS4B,GACrB,OAAO,cAACnF,EAAYoF,SAAb,CAAsBC,MAAO7C,EAA7B,SAA4CD,I,UCNzC+C,ECAAC,E,eCACC,EAAO,O,+BCECC,EAanB,WAAYrE,EAAesE,GAAe,yBAZ1CnB,QAYyC,OAVzCoB,SAUyC,OARzCC,UAQyC,OANzCP,WAMyC,OAJzCK,SAIyC,OAFzCG,gBAEyC,EACvCzD,KAAKuD,IAAMG,cACX1D,KAAKwD,KAAL,OAAYxE,QAAZ,IAAYA,IAAQ,GACpBgB,KAAKsD,IAAL,OAAWA,QAAX,IAAWA,IAAO,GAClBtD,KAAKyD,YAAa,GAITE,EAAb,kDAKE,WAAY3E,EAAciE,EAAeW,GAAgB,IAAD,8BACtD,gBALFC,iBAIwD,IAHxDC,kBAGwD,IAFxDC,cAEwD,EAEtD,EAAKP,KAAOxE,EACZ,EAAKiE,MAAQA,EACb,EAAKY,YAAc,IACnB,EAAKC,aAAeF,EACpB,EAAKG,SAAY,IAAMH,EAAS,EAAI,EANkB,EAL1D,UAA8BP,GAejBW,EAAb,kDAGE,WAAYhF,EAAciE,EAAeW,GAAgB,IAAD,8BACtD,gBAHFE,kBAEwD,EAEtD,EAAKN,KAAOxE,EACZ,EAAKiE,MAAQA,EACb,EAAKa,aAAeF,EAJkC,EAH1D,UAAgCP,G,QCnCXY,E,kDAiBnB,WAAYV,EAAcD,GAAe,IAAD,8BACtC,cAAMC,IAjBRA,SAgBwC,IAdxCC,UAcwC,IAZxCP,WAYwC,IAVxCK,SAUwC,IARxCG,gBAQwC,IANxCS,gBAMwC,IAJxCC,iBAIwC,IAFxCC,WAEwC,EAEtC,EAAKb,IAAL,OAAWA,QAAX,IAAWA,IAAO,GAClB,EAAKD,IAAL,OAAWA,QAAX,IAAWA,IAAO,GAHoB,E,UAjBLD,GCChBgB,E,iDACnBlC,Q,OAEAmC,c,OAEAC,gB,OAEAC,MAAmB,G,KAEnBC,e,iDAEA,SAAYH,GACVtE,KAAKsE,SAAWA,I,2BAGlB,SAAcC,GACZvE,KAAKuE,WAAaA,I,sBAGpB,SAASC,GACPxE,KAAKwE,MAAQA,I,4BAGf,SAAeE,GACb1E,KAAKyE,UAAYC,I,yBAGnB,SAAYd,GACV5D,KAAKwE,MAAQxE,KAAK2E,cAAcf,K,2BAGlC,SAAsBA,GACpB,OAAO,IAAIgB,MAAMhB,GAAOiB,MAAM,GAAGC,KAAI,kBAAM,IAAIb,EAAQP,sB,KCpC9CqB,EAMX,WAAYC,GAAsB,IAAD,+BALjC7C,QAKiC,OAJjCnD,UAIiC,OAHjCsE,SAGiC,OAFjCmB,eAEiC,EAC/BzE,KAAKhB,KAAL,iBAAYgG,QAAZ,IAAYA,OAAZ,EAAYA,EAAUhG,YAAtB,QAA8B,GAC9BgB,KAAKsD,IAAL,iBAAW0B,QAAX,IAAWA,OAAX,EAAWA,EAAU1B,WAArB,QAA4B,GAC5BtD,KAAKyE,UAAL,iBAAiBO,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAUP,iBAA3B,aAAwCQ,GCA/BC,EAAwB,wBAExBC,EAAwB,cACxBC,EAA8B,sBAC9BC,EAAuC,+BAEvCC,EAA2B,2BAC3BC,EAA4B,4BAC5BC,EAAgB,gBAEhBC,EAAY,YACZC,EAAe,eAEfC,EAAqB,qBACrBC,EAAmB,mBAqBnBC,EAAwD,CACnEC,YAAa,IAAIzB,EACjB0B,uBAAwB,GACxBC,eAAe,EACfC,SAAU,kBAAM,OAGLC,EAAyBrI,IAAMC,cAA2C+H,GAE1EM,EAAyB,SAACC,EAAoCC,GACzE,OAAQA,EAAOC,MACb,KAAKpB,EACH,IAAMY,EAA2B,IAAIzB,EAGrC,OAFAyB,EAAYS,YAAYF,EAAOG,KAAKlC,UACpCwB,EAAYW,YAAYJ,EAAOG,KAAKlC,SAASR,cACtC4C,OAAOC,OAAO,GAAIP,EAAO,CAAEN,cAAaC,uBAAwB,KAEzE,KAAKN,EACH,IAAMmB,EAAmBR,EAAML,uBACzBD,EAA2BM,EAAMN,YAEjCtB,EAAQsB,EAAYtB,MAAMM,KAAI,SAAC+B,GAAD,OAClCD,EAAiBE,SAASD,EAAKtD,KAA/B,2BAA2CsD,GAAS,CAAEzC,MAAOiC,EAAOG,KAAKpC,QAAYyC,KAGvF,OADAf,EAAYiB,SAASvC,GACdkC,OAAOC,OAAO,GAAIP,EAAO,CAAEN,cAAaC,uBAAwB,KAEzE,KAAKL,EACH,IAAMkB,EAAmBR,EAAML,uBACzBD,EAA2BM,EAAMN,YAEjCtB,EAAQsB,EAAYtB,MAAMM,KAAI,SAAC+B,GAAD,OAClCD,EAAiBE,SAASD,EAAKtD,KAA/B,2BAA2CsD,GAAS,CAAEzC,MAAO,IAAIW,IAAiB8B,KAGpF,OADAf,EAAYiB,SAASvC,GACdkC,OAAOC,OAAO,GAAIP,EAAO,CAAEN,cAAaC,uBAAwB,KAEzE,KAAKT,EACH,IAAMsB,EAAmBR,EAAML,uBACzBD,EAA2BM,EAAMN,YAEjCtB,EAAQsB,EAAYtB,MAAMM,KAAI,SAAC+B,GAAD,OAClCD,EAAiBE,SAASD,EAAKtD,KAA/B,2BAA2CsD,GAAS,CAAE3C,WAAYmC,EAAOG,KAAKQ,SAAaH,KAI7F,OAFAf,EAAYiB,SAASvC,GAEdkC,OAAOC,OAAO,GAAIP,EAAO,CAAEN,cAAaC,uBAAwB,KAEzE,KAAKR,EACH,IAAMqB,EAAmBR,EAAML,uBACzBD,EAAcM,EAAMN,YAEpBtB,EAAQsB,EAAYtB,MAAMM,KAAI,SAAC+B,GAAD,OAClCD,EAAiBE,SAASD,EAAKtD,KAA/B,2BAA2CsD,GAAS,CAAE1C,YAAakC,EAAOG,KAAKQ,SAAaH,KAK9F,OAFAf,EAAYiB,SAASvC,GAEdkC,OAAOC,OAAO,GAAIP,EAAO,CAAEN,cAAaC,uBAAwB,KAEzE,KAAKP,EACH,IAAMoB,EAAmBR,EAAML,uBACzBD,EAAcM,EAAMN,YAEpBtB,EAAQsB,EAAYtB,MAAMM,KAAI,SAAC+B,GAAD,OAClCD,EAAiBE,SAASD,EAAKtD,KAA/B,2BACSsD,GAAS,CAAE1C,YAAa,IAAIY,EAAYb,WAAY,IAAIa,IAC7D8B,KAKN,OAFAf,EAAYiB,SAASvC,GAEdkC,OAAOC,OAAO,GAAIP,EAAO,CAAEN,cAAaC,uBAAwB,KAEzE,KAAKH,EACH,IAAMtB,EAAW+B,EAAOG,KAAKlC,SACvBwB,EAAcM,EAAMN,YAM1B,OAJAA,EAAYS,YAAYjC,GACxBwB,EAAYW,YAAYnC,EAASR,cACjCgC,EAAYmB,cAAc,IAAI5D,GAEvBqD,OAAOC,OAAO,GAAIP,EAAO,CAAEN,gBACpC,KAAKX,EACH,IAAM7B,EAAM+C,EAAOG,KAAKK,KAAKvD,IACvBwC,EAAcM,EAAMN,YACpBoB,EAAWd,EAAMN,YAAYtB,MAAMM,KAAI,SAACqC,GAAD,OAC3Cf,EAAML,uBAAuBe,SAASK,EAAK5D,KAA3C,2BAAuD4D,GAAS,CAAE7D,QAAU6D,KAGxEC,EAASF,EAASG,OAAM,SAACR,GAAD,QAAYA,EAAKvD,OAG/C,OAFAwC,EAAYiB,SAASG,GAEdR,OAAOC,OAAO,GAAIP,EAAO,CAAEN,cAAaC,uBAAwB,GAAIC,cAAeoB,IAE5F,KAAKhC,EACH,IAAM8B,EAAWd,EAAML,uBAAuBuB,OAAOjB,EAAOG,KAAKT,wBACjE,OAAOW,OAAOC,OAAO,GAAIP,EAAO,CAAEL,uBAAwBmB,IAG5D,KAAK7B,EACH,IAAM6B,EAAWd,EAAML,uBAAuBwB,QAAO,SAACV,GAAD,OAAUA,IAASR,EAAOG,KAAKT,0BACpF,OAAOW,OAAOC,OAAO,GAAIP,EAAO,CAAEL,uBAAwBmB,IAC5D,KAAKvB,EACH,IAAM6B,EAAqBnB,EAAOG,KAAKjC,WACjCkD,EAAqBrB,EAAMN,YAC3B4B,EAAgBD,EAAmBnD,SAASR,aAAe0D,EAAmB1D,aAKpF,OAHA2D,EAAmBhB,YAAYiB,GAC/BD,EAAmBR,cAAcO,GAE1Bd,OAAOC,OAAO,GAAIP,EAAO,CAC9BN,YAAa2B,EACb1B,uBAAwB,KAG5B,QACE,OAAOK,ICpJAuB,EAAwB,SAAC1B,GAAD,OAAmC,SAACY,GACvEZ,EAAS,CAAEK,KAAMnB,EAAuBqB,KAAM,CAAEK,YAGrCe,EAAuB,SAAC3B,EAA+B1B,GAAhC,OAA2D,SAACD,GAC9F2B,EAAS,CAAEK,KAAMV,EAAkBY,KAAM,CAAElC,WAAUC,kBAG1CsD,EAAyB,SAAC5B,GAAD,OAAmC,SAACkB,GACxElB,EAAS,CAAEK,KAAMX,EAAoBa,KAAM,CAAEjC,WAAY4C,OAG9CW,EAAoB,SAACxB,EAAcL,GAAf,OAAiD,SAACe,GACjFf,EAAS,CAAEK,OAAME,KAAM,CAAEQ,cAGde,EAAoB,SAAC9B,GAAD,OAAmC,WAClEA,EAAS,CAAEK,KAAMd,MAGNwC,EAAc,SAAC/B,GAAD,OAAmC,SAAC7B,GAC7D6B,EAAS,CAAEK,KAAMb,EAAWe,KAAM,CAAEpC,aAGzB6D,GAAc,SAAChC,GAAD,OAAmC,WAC5DA,EAAS,CAAEK,KAAMZ,O,SRtCPxC,O,uBAAAA,I,2BAAAA,I,qBAAAA,I,6BAAAA,I,kBAAAA,M,cCAAC,K,uBAAAA,E,+BAAAA,E,mCAAAA,E,qCAAAA,E,uBAAAA,E,yCAAAA,E,0BAAAA,E,8BAAAA,E,gCAAAA,E,+BAAAA,E,6BAAAA,E,oBAAAA,M,uBQEN+E,GAAcC,aAAH,gHAYXC,GAAmBC,KAAOC,IAAV,whBAKP,SAACpI,GAAD,6CAAwCA,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAOqI,aAA/C,QAAwD,EAAxD,OAyBEL,IAIF,SAASM,GAAWtI,GAA4B,IACrDqI,EAAUrI,EAAVqI,MAER,OACE,eAACH,GAAD,CAAkBG,MAAOA,EAAzB,UACE,qBAAKE,UAAU,YACf,qBAAKA,UAAU,YACf,qBAAKA,UAAU,YACf,qBAAKA,UAAU,YACf,qBAAKA,UAAU,e,ICzDTC,G,4CCKG,SAASC,GACtBC,GAGC,IAFDC,IAEA,yDADAC,EACA,yCACkCtI,oBAAS,GAD3C,mBACOuI,EADP,KACkBC,EADlB,KAEMC,EAAW1I,iBAAO9B,EAAWI,IAAI+J,IAFvC,EAIwBpI,mBAAc,IAJtC,mBAIO0I,EAJP,KAIaC,EAJb,KAKMC,EAAU7I,iBAAY,IAEtB8I,EAAU,SAAClH,EAAamH,GAA2C,IAAD,EACtEN,GAAa,GACb,IAAMO,EAAcH,EAAQnI,QACtBuI,EAAQrH,EAAK8G,EAAShI,QAAQuB,MAAML,GAAM8G,EAAShI,QACnDwI,GAAgB,UAACF,EAAYA,EAAYG,OAAS,UAAlC,eAA8CjF,YAAa,EAC3EkF,EAAcL,EAChBE,EAAMI,aAAa,aAAaC,WAAWJ,GAAeK,aAAaR,GACvEE,EAEJ,OAAO,IAAItI,SAAQ,SAACC,GAClBwI,EAAUI,KAAK,SAAS,SAACC,GACvB,GAAIA,EAASC,SAAU,CACrB,IAAIC,EAAgB,GACpBxD,OAAOyD,QAAaH,EAASI,OAAOC,SAAQ,SAACF,GAC3C,IAAMG,EAAQ,aAAKnI,GAAIgI,EAAQ,IAAOA,EAAQ,IAC9CD,EAAWA,EAAS5C,OAAOgD,MAG7BlB,EAAQnI,QAAUqI,EAAaC,EAAYjC,OAAO4C,GAAYA,GACvD,OAAPpB,QAAO,IAAPA,OAAA,EAAAA,EAASyB,MAAO7B,GAAQ8B,KAAOrB,EAAQC,EAAQnI,QAAQwJ,WAAatB,EAAQC,EAAQnI,SACpF+H,GAAa,GACb7H,GAAQ,QAEPmI,GAAcH,EAAQ,IACvBH,GAAa,GACb7H,GAAQ,GAGVwI,EAAUe,aAKVC,EAAO,SAAC1L,EAAW2L,GAAmB,IAAD,EACnCC,EAAO,iBAAGD,QAAH,IAAGA,IAAQ3B,EAAShI,QAAQ6J,OAAOvH,WAAnC,QAA0CG,cACjDqH,EAAY5L,KAAKM,MAAMN,KAAKC,UAAUH,IAE5C,OAAO,IAAIiC,SAAQ,SAACC,GAAD,OAAa8H,EAAShI,QAAQuB,MAAMqI,GAASG,IAAID,EAAW5J,OAG3E8J,EAAS,SAAC9I,GACd,OAAO,IAAIjB,SAAQ,SAACC,GAAD,OAAa8H,EAAShI,QAAQuB,MAAML,GAAI8I,OAAO9J,OAG9D+J,EAAQ,SAAC/I,EAAYlD,GACzB,OAAO,IAAIiC,SAAQ,SAACC,GAAD,OAAa8H,EAAShI,QAAQuB,MAAML,GAAIgJ,OAAOlM,EAAQkC,OAuB5E,OApBAP,qBAAU,WACRoI,GAAa,GACb,IAAMnK,EAAMiK,EAAUG,EAAShI,QAAQ2I,aAAad,EAAQ8B,MAAQ3B,EAAShI,QAe7E,OAbI4H,GACFhK,EAAIuM,GAAG,SAAS,SAACpB,GACf,IAAId,EAAY,GAChBc,EAASK,SAAQ,SAACgB,GAChB,IAAMpM,EAAS,aAAKkD,GAAIkJ,EAAc9H,KAAQ8H,EAAcjB,OAC5DlB,EAAOA,EAAK5B,OAAOrI,MAGrB+J,GAAa,IACN,OAAPF,QAAO,IAAPA,OAAA,EAAAA,EAASyB,MAAO7B,GAAQ8B,KAAOrB,EAAQD,EAAKuB,WAAatB,EAAQD,MAI9D,kBAAMrK,EAAI6L,IAAI,YACpB,IAEI,CAAExB,OAAMH,YAAWM,UAASsB,OAAMM,SAAQC,SCjF5C,SAASI,GACd1C,EACA2C,EACAC,EACAC,GACsC,IAAD,EACU9C,GAAcC,GAAW,OAAO3D,GAAjEiF,EADuB,EAC7BhB,KAAgBH,EADa,EACbA,UAAWM,EADE,EACFA,QADE,EAGD7I,oBAAkB,GAHjB,mBAG9BkL,EAH8B,KAGlBC,EAHkB,KAI/BC,EAAiBrL,kBAAO,GACxBsL,EAAYtL,kBAAO,GAEnBuL,EAAO,yCAAG,uBAAAC,EAAA,sDACTL,GACHrC,EAAQ,GAAI,GAAGjI,MAAK,SAACsK,GACnBC,EAAcD,MAHJ,2CAAH,qDAkEb,OAnBA9K,qBAAU,WACR+K,GAAc,KACb,CAAC/C,IAEJhI,qBAAU,WACR,IAAIoL,EACAC,EAOJ,OALIV,GAAkBC,GAAeC,IACnCO,EAhDwB,SAACE,GAC3B,IAAMC,EAAuB,IAAIC,sBAC/B,SAACjC,GACCyB,EAAe3K,QAAUkJ,EAAQ,GAAGkC,eAChCR,EAAU5K,SAIV2K,EAAe3K,UACjB4K,EAAU5K,SAAU,EACpB6K,OAGJ,CAAEQ,KAAMd,IAKV,OAFAW,EAAqBI,QAAQL,GAEtBC,EA8BUK,CAAoBjB,GACnCU,EA5BoB,SAACR,GACvB,IAAMgB,EAAmB,IAAIC,kBAAiB,SAACC,GAAiC,IAAD,EACvEC,EAA0E,OAA3D,UAAAD,EAAUA,EAAUjD,OAAS,GAAGmD,WAAW,UAA3C,eAA+CC,UACpEjB,EAAU5K,SAAU,EAEhB2K,EAAe3K,SAAW2L,IAC5Bf,EAAU5K,SAAU,EACpB6K,QAQJ,OALAW,EAAiBF,QAAQd,EAAiB,CACxCsB,WAAW,EACXC,SAAS,IAGJP,EAaMQ,CAAgBxB,IAGtB,WACLO,GAAgBA,EAAakB,aAC7BjB,GAAYA,EAASiB,gBAEtB,CAACtE,EAAW2C,EAAgBC,IAExB,CAAEtC,KAAMgB,EAAUnB,c,SFjFfL,K,UAAAA,E,aAAAA,Q,KGKL,I,eAAMyE,GAAiB9E,KAAO+E,GAAV,0EACvB,SAAClN,GAAD,MACiB,SAAjBA,EAAMmN,QACNC,aADA,sPAgBEC,GAAelF,KAAOmF,GAAV,iGAId,SAACtN,GAAD,OACAA,EAAMuD,YACN6J,aADA,gGAOSG,GAAYpF,KAAOC,IAAV,kLAYP,SAASoF,GAAuCxN,GAO3D,IACMmN,EAA0EnN,EAA1EmN,OAAQzE,EAAkE1I,EAAlE0I,UAAW+E,EAAuDzN,EAAvDyN,WAAYC,EAA2C1N,EAA3C0N,WAAYC,EAA+B3N,EAA/B2N,aAAcC,EAAiB5N,EAAjB4N,aADhE,EAE+BtN,qBAF/B,mBAEMuN,EAFN,KAEgBC,EAFhB,OAG2BxN,mBAAgC,MAH3D,mBAGMyN,EAHN,KAGcC,EAHd,OAI+B1N,mBAAgC,MAJ/D,mBAIM2N,EAJN,KAIgBC,EAJhB,OAK6C5N,mBAAkC,MAL/E,mBAKMiL,EALN,KAKuB4C,EALvB,OAM2B/C,GAAgB1C,EAAWqF,EAAQE,EAAU1C,GAAjEvC,EANP,EAMOA,KAAMH,EANb,EAMaA,UAEdnI,qBAAU,WACJsI,EAAKQ,QAAUiE,GACjBW,EAAiBpF,EAAK,MAEvB,CAACA,IAEJ,IAAMoF,EAAmB,SAACnH,GACxB6G,EAAY7G,GACZ0G,GAAgBA,EAAa1G,IAO/B,OACE,sBAAKsB,UAAU,2CAA2C5J,IAAKuP,EAA/D,UACE,eAACX,GAAD,WACE,cAACN,GAAD,CAAgBE,OAAQA,EAAQxO,IAAKwP,EAArC,SACGnF,EAAKpE,KAAI,SAACqC,GAAD,OACR,eAACoG,GAAD,CAEEgB,QAAS,kBAAMD,EAAiBnH,IAChC1D,aAAckK,GAAcxG,EAAKhF,MAAL,OAAY4L,QAAZ,IAAYA,OAAZ,EAAYA,EAAU5L,IAHpD,UAKE,qBAAKsG,UAAU,4BAA4B+F,IAAKrH,EAAK7D,MACpDsK,GACC,mBACEnF,UAAU,uEACV8F,QAAS,kBAlBE,SAACpH,GAC1B2G,GAAgBA,EAAa3G,GAiBAsH,CAAmBtH,QARjCA,EAAKhF,SAchB,qBAAKsG,UAAU,SAAS5J,IAAKqP,OAE/B,qBAAKzF,UAAU,OAAf,SAAuBM,GAAa,cAACP,GAAD,CAAYD,MAAO,UC/F9C,SAASmG,GAAWxO,GAA0E,IACnGyO,EAA0BzO,EAA1ByO,SAAU1G,EAAgB/H,EAAhB+H,YADwF,EAE1EzH,mBAAmB,IAAIuE,GAFmD,mBAEnGgJ,EAFmG,KAEzFC,EAFyF,KAI1G,OACE,sBAAKvF,UAAU,uBAAf,UACE,sBAAKA,UAAU,+BAAf,UACE,wBAAQ8F,QAAS,kBAAMI,EAASZ,IAAWtF,UAAU,gBAArD,gCAGA,wBAAQ8F,QAAS,kBAAMtG,KAAeQ,UAAU,gBAAhD,yCAIF,qBAAKA,UAAU,mCAAf,SACE,cAACiF,GAAD,CACEL,OAAO,OACPzE,UAAU,kBACV+E,YAAY,EACZE,aAAc,SAACE,GAAD,OAAcC,EAAYD,WCnBnC,SAASa,GAAY1O,GAIhC,IACM2O,EAA0C3O,EAA1C2O,WAAYC,EAA8B5O,EAA9B4O,YAAaC,EAAiB7O,EAAjB6O,aADhC,EAE+BvO,mBAAmB,IAAIuE,GAFtD,mBAEMgJ,EAFN,KAEgBC,EAFhB,KAID,OACE,sBAAKvF,UAAU,uBAAf,UACE,sBAAKA,UAAU,+BAAf,UACE,wBAAQ8F,QAAS,kBAAMM,EAAWd,IAAWtF,UAAU,gBAAvD,wCAGA,wBAAQ8F,QAAS,kBAAMQ,KAAgBtG,UAAU,gBAAjD,4BAGA,wBAAQ8F,QAAS,kBAAMO,EAAYf,IAAWtF,UAAU,gBAAxD,2CAIF,qBAAKA,UAAU,SAAf,SACE,cAACiF,GAAD,CACEL,OAAO,OACPzE,UAAU,wBACV+E,YAAY,EACZE,aAAc,SAAC7G,GAAD,OAAYgH,EAAYhH,WC3BjC,SAASgI,GAAmC9O,GAKvD,IACM+O,EAA+C/O,EAA/C+O,UAAW/F,EAAoChJ,EAApCgJ,KAAMgG,EAA8BhP,EAA9BgP,aAAcC,EAAgBjP,EAAhBiP,YACjCC,EAAY,SAAClP,GAAwB,IACjCiH,EAASjH,EAATiH,KACR,OACE,wBACEkI,QAASlI,EAAK5D,IACdkF,UAAU,+HAFZ,UAIE,uBACEnC,KAAK,QACLnE,GAAIgF,EAAK5D,IACTN,MAAOkE,EAAKlE,MACZjE,KAAMiQ,EACNK,QAASJ,GAAgB/H,EAAK5D,MAAQ2L,EAAa3L,IACnDgM,SAAU,WACRJ,EAAYhI,MAGhB,+BAAOA,EAAK3D,WAKlB,OACE,qBAAKiF,UAAU,+BAAf,YACI,OAACS,QAAD,IAACA,OAAD,EAACA,EAAMQ,UAAR,OAAkBR,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAMpE,KAAI,SAACqC,GAAD,OAAU,cAACiI,EAAD,CAA0BjI,KAAMA,GAAhBA,EAAK5D,WCDnD,SAASiM,KAAgB,IAAD,MACGhP,mBAA4B0C,EAAkBS,UADjD,mBAC9B8L,EAD8B,KAChBC,EADgB,OAEY/P,qBAAWuG,GAApDJ,EAF6B,EAE7BA,YAAaE,EAFgB,EAEhBA,cAAeC,EAFC,EAEDA,SACtB0J,EAAchH,GAAwB,YAA5CO,KACM0G,EAAgBjH,GAAwB,cAA9CO,KACA3J,EAAeT,IAAfS,WACAoL,EAAShC,GAAa,8CAAiCpJ,EAAiB6D,UAAlD,aAAiC,EAAwByM,aAAzD,QAAkE,KAAxFlF,KACFmF,EAAUC,cAEhBnP,qBAAU,WACF+O,GAAeA,EAAUjG,QTFJ,SAACzD,GAAD,OAAmC,SAAC3B,GACjE2B,EAAS,CAAEK,KAAMpB,EAAuBsB,KAAM,CAAElC,eSE5C0L,CAAgB/J,EAAhB+J,CAA0BL,EAAU,MAErC,CAACA,IAkBJ,OACE,sBAAKlH,UAAU,iFAAf,UACE,oBAAIA,UAAU,+BAAd,0BACA,sBAAKA,UAAU,oCAAf,UACGgH,IAAiBvM,EAAkBS,UAClC,sBAAK8E,UAAU,kCAAf,UACE,uBAAOA,UAAU,oBAAjB,0BACA,uBAAOA,UAAU,oBAAjB,0EACA,qBAAKA,UAAU,8BAAf,SACE,cAACuG,GAAD,CACE9F,KAAMyG,EACNT,aAAcpJ,EAAYxB,SAC1B2K,UAAU,WACVE,YAAavH,EAAqB3B,EAAU2J,EAAY,WAK/DH,IAAiBvM,EAAkBc,YAClC,sBAAKyE,UAAU,kCAAf,UACE,uBAAOA,UAAU,oBAAjB,0BACA,uBAAOA,UAAU,oBAAjB,0EACA,qBAAKA,UAAU,8BAAf,SACE,cAACuG,GAAD,CACE9F,KACE0G,GAAeA,EAAYrI,QAAO,SAACJ,GAAD,OAAwBA,EAAKlE,QAAU6C,EAAYxB,SAASrB,SAEhGiM,aAAcpJ,EAAYvB,WAC1B0K,UAAU,aACVE,YAAatH,EAAuB5B,UAK3CwJ,IAAiBvM,EAAkBe,SAClC,sBAAKwE,UAAU,kCAAf,UACE,uBAAOA,UAAU,oBAAjB,0BACA,uBAAOA,UAAU,oBAAjB,4IACA,qBAAKA,UAAU,mCAAf,SACE,cAACiF,GAAD,CACEL,OAAO,OACPzE,UAAU,yBACViF,aAAclG,EAAsB1B,UAK3CwJ,IAAiBvM,EAAkB+M,aAClC,sBAAKxH,UAAU,kCAAf,UACE,uBAAOA,UAAU,oBAAjB,0BACA,uBAAOA,UAAU,oBAAjB,wMACA,qBAAKA,UAAU,mCAAf,SACE,cAACmG,GAAD,CACEG,aAAchH,EAAkB9B,GAChC4I,WAAY/G,EAAkBxC,EAA0BW,GACxD6I,YAAahH,EAAkBvC,EAA2BU,UAKjEwJ,IAAiBvM,EAAkBgN,OAClC,sBAAKzH,UAAU,kCAAf,UACE,uBAAOA,UAAU,oBAAjB,0BACA,uBAAOA,UAAU,oBAAjB,0KACA,qBAAKA,UAAU,mCAAf,SACE,cAACiG,GAAD,CAAYC,SAAU3G,EAAY/B,GAAWgC,YAAaA,GAAYhC,aAK9E,sBAAKwC,UAAU,2BAAf,UACE,wBAAQ8F,QAAS,WAnFrBmB,GAAgB,SAACS,GAAD,OAAeA,EAAY,MAmFHC,SAA0B,GAAhBX,EAA9C,gCAGCA,IAAiBvM,EAAkBgN,OAClC,wBAAQ3B,QAAS,WAnFvBmB,GAAgB,SAACS,GAAD,OAAeA,EAAY,MAmFDC,SA1F1CX,GAAgBvM,EAAkBgN,OAAUT,GAAgBvM,EAAkBe,UAAY+B,EA0FpF,gCAIDyJ,GAAgBvM,EAAkBgN,OAAS,wBAAQ3B,QAAS,kBAnFjEzI,EAAYuK,eAAetS,IAASW,SAAS4R,YAAYC,gBACzD5F,EAAK7E,GAAa1E,MAAK,kBAAM0O,EAAQhF,KAAK3H,EAASqN,kBAkFH,gCCtIpD,I,SAAMC,GAAcpI,KAAOC,IAAV,sSAER,SAACpI,GAAD,gBAA+BA,EAAMwQ,IAArC,SACC,SAACxQ,GAAD,gBAAgCA,EAAMyQ,KAAtC,SAEC,SAACzQ,GAAD,gBAAkCA,EAAM0Q,OAAxC,SACC,SAAC1Q,GAAD,gBAAkCA,EAAM0Q,OAAxC,SAIU,SAAC1Q,GAAD,gBAAmCA,EAAM2Q,QAAzC,UAElB,SAAC3Q,GAAD,OACAA,EAAM4Q,SACNxD,aADA,wHAMA,SAACpN,GAAD,OACAA,EAAM6Q,WACNzD,aADA,wEAUE0D,GAAS3I,KAAO4I,IAAIC,OAAM,SAAChR,GAAD,YAAiC,CAAEiR,OAAM,UAAEjR,EAAMiR,cAAR,YAA1D9I,CAAH,sHAER,SAACnI,GAAD,OAAYA,EAAMiR,OAAN,8BAIZ,SAACjR,GAAD,OAAWA,EAAMiR,QAAN,+BAGTjB,GAAQ7H,KAAOC,IAAV,6VAuBI,SAAS8I,GAAKlR,GAOzB,IAAD,MACOwQ,EAAiDxQ,EAAjDwQ,IAAKC,EAA4CzQ,EAA5CyQ,KAAMxJ,EAAsCjH,EAAtCiH,KAAM0J,EAAgC3Q,EAAhC2Q,QAAS9M,EAAuB7D,EAAvB6D,SAAUkC,EAAa/F,EAAb+F,SAD3C,EAEiCzF,oBAAkB,GAFnD,mBAEMuQ,EAFN,KAEiBM,EAFjB,KAIDzQ,qBAAU,WACRyQ,GAAa,KACZ,CAAClK,IAgBJ,OACE,mCACE,eAACsJ,GAAD,CACEC,IAAKA,EACLC,KAAMA,EACNG,UAAS,OAAC3J,QAAD,IAACA,OAAD,EAACA,EAAM7D,KAChByN,UAAWA,EACXH,OAAQ7M,EACR8M,QAASA,EACTtC,QAAS,kBAvBM,SAACpH,GACpBkK,GAAa,SAACC,GACZ,IAAMC,GAAYD,EAQlB,OANIrL,GAEEA,EADJsL,EACa,CAAEjL,KAAMlB,EAA6BoB,KAAM,CAAET,uBAAwBoB,EAAK5D,MAC1E,CAAE+C,KAAMjB,EAAsCmB,KAAM,CAAET,uBAAwBoB,EAAK5D,OAG3FgO,KAaUC,CAAarK,IAP9B,WASO,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAM/C,aAAN,eAAad,MACZ,eAAC4M,GAAD,WACE,mBAAGzH,UAAU,0BACb,qBAAKA,UAAU,cAAf,SACE,qBAAK+F,IAAKrH,EAAK/C,MAAMd,YAItB,OAAJ6D,QAAI,IAAJA,GAAA,UAAAA,EAAMjD,kBAAN,eAAkBZ,MAAO,cAAC0N,GAAD,CAAQxC,IAAG,OAAErH,QAAF,IAAEA,OAAF,EAAEA,EAAMjD,WAAWZ,MACxD,+BAAU,OAAJ6D,QAAI,IAAJA,OAAA,EAAAA,EAAM7D,MAAO,qBAAKkL,IAAG,OAAErH,QAAF,IAAEA,OAAF,EAAEA,EAAM7D,IAAKmF,UAAU,qBAC7C,OAAJtB,QAAI,IAAJA,GAAA,UAAAA,EAAMhD,mBAAN,eAAmBb,MAAO,cAAC0N,GAAD,CAAQxC,IAAG,OAAErH,QAAF,IAAEA,OAAF,EAAEA,EAAMhD,YAAYb,IAAK6N,QAAQ,SClH/E,I,MAAMM,GAAiBpJ,KAAOC,IAAV,mLACT,SAACpI,GAAD,gBAAmE,EAAfA,EAAM0Q,OAAa1Q,EAAM6D,SAA7E,SACC,SAAC7D,GAAD,gBAAmE,EAAfA,EAAM0Q,OAAa1Q,EAAM6D,SAA7E,SAMR,SAAC7D,GAAD,OACAA,EAAMwR,eACNpE,aADA,kEAMEqE,GAAqBtJ,KAAOC,IAAV,kHACb,SAACpI,GAAD,4BAAgDA,EAAM6D,SAAtD,UACC,SAAC7D,GAAD,4BAAgDA,EAAM6D,SAAtD,UAKG,SAAS6N,GAAQ1R,GAI5B,IACM4F,EAAoC5F,EAApC4F,YAAasK,EAAuBlQ,EAAvBkQ,SAAUnK,EAAa/F,EAAb+F,SACvBzB,EAAoBsB,EAApBtB,MAAOF,EAAawB,EAAbxB,SAEf,IAAKA,EACH,OAAO,6BAGT,IAAMuN,EAqBR,SACEC,EACAxN,GAEA,IAAMyN,EAAazN,EAAST,YACtBmO,EAAa1N,EAAST,YACtBoO,EAAgB,IAAM3N,EAASR,aAC/BoO,EAAgBD,EAAgBE,KAAKC,GAAM,IAEjD,OAAON,EAAahN,KAAI,SAACqC,EAAMkL,GAC7B,IAAM1B,EAAOwB,KAAKG,IAAIJ,EAAeG,GAASN,EAAaA,EAG3D,MAAO,CAAE5K,OAAMuJ,IAFHyB,KAAKI,IAAIL,EAAeG,GAASL,EAAaA,EAEtCrB,OAAME,QAASoB,MAlChBO,CAAqBhO,EAAOF,GAEjD,OACE,cAACmN,GAAD,CAAgBb,OAAQtM,EAAST,YAAaE,SAAUO,EAASP,SAAU2N,gBAAiBtB,EAA5F,SACE,cAACuB,GAAD,CAAoB5N,SAAUO,EAASP,SAAvC,SACG8N,EAAa/M,KAAI,SAAC0B,EAAM6L,GAAP,OAChB,cAACjB,GAAD,CAEEV,IAAKlK,EAAKkK,IACVC,KAAMnK,EAAKmK,KACXxJ,KAAMX,EAAKW,KACXlB,SAAUA,EACVlC,SAAUO,EAASP,SACnB8M,QAASrK,EAAKqK,QAAUwB,GAAS,GAN5B7L,EAAKW,KAAK5D,YC5CZ,SAASkP,KAAoB,IAAD,EACP9S,qBAAWuG,GAArCJ,EADiC,EACjCA,YAAaG,EADoB,EACpBA,SAErB,OAAO,cAAC2L,GAAD,CAAS9L,YAAaA,EAAaG,SAAUA,ICKtD,IAAMyM,GAAWrK,KAAOC,IAAV,iEAKRqK,GAAwBtK,KAAOC,IAAV,gHA8BZsK,IC/CHC,GAQAC,G,GDuCGF,GAvBf,WAA4B,IAAD,EACCG,qBAAW5M,EAAwBN,GADpC,mBAClBO,EADkB,KACXH,EADW,KAEzB,OACE,cAACC,EAAuBlD,SAAxB,CACEC,MAAO,CACL6C,YAAaM,EAAMN,YACnBC,uBAAwBK,EAAML,uBAC9BC,cAAeI,EAAMJ,cACrBC,YALJ,SAQE,eAACyM,GAAD,CAAUjK,UAAU,MAApB,UACE,qBAAKA,UAAU,6CAAf,SACE,cAACgK,GAAD,MAEF,eAACE,GAAD,CAAuBlK,UAAU,sBAAjC,UACE,qBAAKA,UAAU,+DACf,cAAC+G,GAAD,aEpCK,SAASwD,GAAoB9S,GAA0D,IAC5F+S,EAA2B/S,EAA3B+S,WAAYC,EAAehT,EAAfgT,WACZxQ,EAAgBhD,IAAhBgD,YACFoN,EAAUC,cAMhB,OACE,sBAAKtH,UAAU,+DAA+D0K,MAAO,CAAEC,KAAM,aAA7F,UACE,qBAAK3K,UAAU,qCAAf,SACGwK,EAAWnO,KAAI,SAACuO,GAAD,OACd,eAAC,IAAD,CAEE5K,UAAU,8CACV6K,gBAAgB,cAChBC,GAAE,UAAKL,GAAL,OAAkBG,EAAIzI,MAJ1B,UAME,uBAAOnC,UAAU,UAAjB,SAA4B4K,EAAI7P,OAChC,mBAAGiF,UAAU,4BANR4K,EAAI9P,UAUf,wBAAQgL,QApBI,WACd7L,IACAoN,EAAQhF,KAAK3H,EAASqQ,gBAkBpB,8B,SD7BMX,K,cAAAA,E,YAAAA,E,4BAAAA,E,kBAAAA,E,uBAAAA,Q,cAQAC,K,qBAAAA,E,yBAAAA,E,uBAAAA,E,iBAAAA,E,wBAAAA,Q,KEJZ,I,SAAMW,GAAUpL,KAAOC,IAAV,iEAKE,SAASoL,GAAaxT,GAAwD,IAAD,UAClFyT,EAAiBzT,EAAjByT,OAAQ3U,EAASkB,EAATlB,KAEhB,OACE,sCACG,UAAA2U,EAAO3U,UAAP,eAAe8T,GAAcc,UAAW,cAACH,GAAD,wCACxC,UAAAE,EAAO3U,UAAP,eAAe8T,GAAce,YAAa,cAACJ,GAAD,oDAC1C,UAAAE,EAAO3U,UAAP,eAAe8T,GAAcgB,WAAY,cAACL,GAAD,oDACzC,UAAAE,EAAO3U,UAAP,eAAe8T,GAAclR,QAAS,cAAC6R,GAAD,8CACtC,UAAAE,EAAO3U,UAAP,eAAe8T,GAAciB,WAAY,cAACN,GAAD,sDCjBzC,I,wBAAMO,GAAU3L,KAAO4L,OAAV,iKAUPC,GAAc7L,KAAO4L,OAAV,wNAOpB,SAAC/T,GAAD,OACAA,EAAMiR,QACN7D,aADA,mECjBS6G,GAAY9L,KAAO+L,MAAV,wcA4BTC,GAAQhM,KAAOiM,KAAV,ujBAEE,SAACpU,GAAD,OAAwC,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOqU,YAAa,SAGrD,SAACrU,GAAD,8BAAoCA,QAApC,IAAoCA,OAApC,EAAoCA,EAAOsU,mBAA3C,QAA0D,aCjCnEC,GAAQpM,KAAOC,IAAV,2YCCfwK,GAAcc,OACdd,GAAce,SACdf,GAAcgB,QACdhB,GAAclR,KACdkR,GAAciB,Q,GAIdlB,GAAgB6B,M,GAChB7B,GAAgB8B,K,GAChB9B,GAAgB+B,a,GAChB/B,GAAgBkB,Q,GAChBlB,GAAgBgC,UALZ,IAAMC,GAAb,kHCmBO,SAASC,GAAcnS,GAC5B,MAAO,CACL0D,KAAMwM,GAAce,SACpBmB,UAAWpS,EAAEqS,cAAcjW,KAC3BkW,QAAStS,EAAEqS,cAAcE,SAASC,cAI/B,SAASC,GAAazS,GAC3B,MAAO,CACL0D,KAAMwM,GAAcgB,QACpBkB,UAAWpS,EAAEqS,cAAcjW,KAC3BkW,QAAStS,EAAEqS,cAAcE,SAASG,cAIvB,SAASC,KAAmD,IAAnCC,EAAkC,uDAAnB,IAAIV,GACnDW,EAAU,SAACrP,EAAoBC,GAAqC,IAAD,EACjE2O,EAAS,UAAI3O,EAAO2O,iBAAX,QAA4CnC,GAAgBgC,UAE3E,OAAIxO,EAAOC,KACF,2BAAKF,GAAZ,IAAmB,CAAC4O,GAAD,2BAAkB5O,EAAM4O,IAAxB,IAAoC,CAAC3O,EAAOC,MAAOD,EAAO6O,YAGxE9O,GAGT,OAAO2M,qBAAW0C,EAASD,G,wCCtDhBE,GAAeC,KAASA,KAAWA,MAEnCC,GAAkBD,KAAaD,ICCrC,SAASG,GAAqBxT,GAAyD,IAAD,uBAAjCyT,EAAiC,iCAAjCA,EAAiC,wBAC3DtV,oBAAkB,GADyC,mBACpFuV,EADoF,KAC1EC,EAD0E,KAiB3F,OAdApV,qBAAU,WACR,IAAIqV,GAAQ,EACZH,EAAazL,SAAQ,SAAC6L,GACpB,GAAIN,GAAgBvT,EAAM6T,IAAS,CACjC,IAAMC,EAAOzP,OAAOC,OAAO,GAAItE,EAAM6T,IACrCD,EAAQA,GAASvP,OAAO0P,OAAOD,GAAM9O,OAAM,SAACpE,GAAD,OAAYA,UAEvDgT,GAAQ,KAIZD,EAAYC,KACX,CAAC5T,IAEG,CAAE0T,WAAUC,eCVN,SAASK,KAAgB,IAAD,EACN1N,GAAwB,YAA/CO,EAD6B,EAC7BA,KAAMyB,EADuB,EACvBA,KAAMM,EADiB,EACjBA,OADiB,EAGbzK,mBAAS,IAHI,mBAG9BxB,EAH8B,KAGxBsX,EAHwB,OAIC9V,mBAAiB,GAJlB,mBAI9B+V,EAJ8B,KAIjBC,EAJiB,OAKGhW,mBAAiB,GALpB,mBAK9BsD,EAL8B,KAKhB2S,EALgB,OAQTlB,KARS,mBAQ9B5B,EAR8B,KAQtB+C,EARsB,KAS7BX,EAAaF,GAAqBlC,EAAQd,GAAgB8B,KAAM9B,GAAgB+B,cAAhFmB,SAUR,OACE,qCACE,eAAC1B,GAAD,CAAO5L,UAAU,cAAjB,UACE,eAAC0L,GAAD,WACE,qBAAK1L,UAAU,QAAf,4BACA,uBACEnC,KAAK,OACLmC,UAAU,OACVzJ,KAAM6T,GAAgB8B,KACtB1R,MAAOjE,EACP2X,QAAS,SAAC/T,GACR8T,EAAU3B,GAAcnS,IACxB0T,EAAQ1T,EAAEqS,cAAchS,QAE1B2T,UAAQ,IAEV,cAAClD,GAAD,CAAcC,OAAQA,EAAQ3U,KAAM6T,GAAgB8B,UAEtD,eAACR,GAAD,WACE,qBAAK1L,UAAU,QAAf,4BACA,sBAAKA,UAAU,sBAAf,UACE,gCACE,uBACEtG,GAAG,MACHmE,KAAK,QACLrD,MAAO,EACPjE,KAAK,cACLsQ,QAAyB,IAAhBiH,EACThH,SAAU,SAAC3M,GAAD,OAAO4T,EAAeK,SAASjU,EAAEqS,cAAchS,WAE3D,uBAAOoM,QAAQ,MAAM5G,UAAU,iBAA/B,oBAIF,gCACE,uBACEtG,GAAG,OACHmE,KAAK,QACLrD,MAAO,GACPjE,KAAK,cACLsQ,QAAyB,KAAhBiH,EACThH,SAAU,SAAC3M,GAAD,OAAO4T,EAAeK,SAASjU,EAAEqS,cAAchS,WAE3D,uBAAOoM,QAAQ,OAAO5G,UAAU,iBAAhC,2BAMN,eAAC0L,GAAD,WACE,qBAAK1L,UAAU,QAAf,4BACA,uBACEnC,KAAK,SACLmC,UAAU,OACVzJ,KAAM6T,GAAgB+B,aACtBkC,KAAK,IACLF,UAAQ,EACR3T,MAAOa,EACP6S,QAAS,SAAC/T,GACR8T,EAAUrB,GAAazS,IACvB8T,EAAU3B,GAAcnS,IACxB6T,EAAgBM,OAAOnU,EAAEqS,cAAchS,WAG3C,cAACyQ,GAAD,CAAcC,OAAQA,EAAQ3U,KAAM6T,GAAgB+B,kBAEtD,uBAAOtO,KAAK,SAASrD,MAAM,eAAKsL,QA1EZ,WACxB5D,EAAK,IAAIhH,EAAS3E,EAAMuX,EAAazS,IAAe1C,MAAK,WACvDkV,EAAQ,IACRE,EAAe,GACfC,EAAgB,OAsE8CrG,UAAW2F,OAEzE,eAACtB,GAAD,CAAOhM,UAAU,QAAjB,UACE,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,aAAf,0BACA,qBAAKA,UAAU,aAAf,0BACA,qBAAKA,UAAU,aAAf,sCACA,qBAAKA,UAAU,aAAf,sCACA,qBAAKA,UAAU,kBAEjB,qBAAKA,UAAU,kBAAf,gBACGS,QADH,IACGA,OADH,EACGA,EAAMpE,KAAI,SAACkS,EAAa3E,GAAd,OACT,sBAAgB5J,UAAU,YAA1B,UACE,qBAAKA,UAAU,aAAf,SAA6B4J,EAAQ,IACrC,qBAAK5J,UAAU,aAAf,SAA6BuO,EAAExT,OAC/B,qBAAKiF,UAAU,aAAf,SAA6BuO,EAAE/T,QAC/B,qBAAKwF,UAAU,aAAf,SAA6BuO,EAAElT,eAC/B,qBAAK2E,UAAU,aAAf,SACE,cAACuL,GAAD,CAASzF,QAAS,kBAAMtD,EAAO+L,EAAE7U,KAAjC,8BANM6U,EAAE7U,eClGT,SAAS8U,KAAkB,IAAD,EACRtO,GAA0B,cAAjDO,EAD+B,EAC/BA,KAAMyB,EADyB,EACzBA,KAAMM,EADmB,EACnBA,OADmB,EAGfzK,mBAAS,IAHM,mBAGhCxB,EAHgC,KAG1BsX,EAH0B,OAID9V,mBAAiB,GAJhB,mBAIhC+V,EAJgC,KAInBC,EAJmB,OAKChW,mBAAiB,GALlB,mBAKhCsD,EALgC,KAKlB2S,EALkB,OAQXlB,KARW,mBAQhC5B,EARgC,KAQxB+C,EARwB,KAS/BX,EAAaF,GAAqBlC,EAAQd,GAAgB8B,KAAM9B,GAAgB+B,cAAhFmB,SAUR,OACE,qCACE,eAAC1B,GAAD,WACE,eAACF,GAAD,WACE,qBAAK1L,UAAU,QAAf,4BACA,uBACEnC,KAAK,OACLmC,UAAU,OACVzJ,KAAM6T,GAAgB8B,KACtB1R,MAAOjE,EACP2X,QAAS,SAAC/T,GACR8T,EAAU3B,GAAcnS,IACxB0T,EAAQ1T,EAAEqS,cAAchS,QAE1B2T,UAAQ,IAEV,cAAClD,GAAD,CAAcC,OAAQA,EAAQ3U,KAAM6T,GAAgB8B,UAEtD,eAACR,GAAD,WACE,qBAAK1L,UAAU,QAAf,4BACA,sBAAKA,UAAU,sBAAf,UACE,wBAAOA,UAAU,iBAAjB,UACE,uBACEnC,KAAK,QACLrD,MAAO,EACPjE,KAAK,cACLuQ,SAAU,SAAC3M,GAAD,OAAO4T,EAAeK,SAASjU,EAAEqS,cAAchS,SACzDqM,QAAyB,IAAhBiH,IANb,SAUA,wBAAO9N,UAAU,iBAAjB,UACE,uBACEnC,KAAK,QACLrD,MAAO,GACPjE,KAAK,cACLuQ,SAAU,SAAC3M,GAAD,OAAO4T,EAAeK,SAASjU,EAAEqS,cAAchS,SACzDqM,QAAyB,KAAhBiH,IANb,gBAYJ,eAACpC,GAAD,WACE,qBAAK1L,UAAU,QAAf,4BACA,uBACEnC,KAAK,SACLmC,UAAU,OACVqO,KAAK,IACL9X,KAAM6T,GAAgB+B,aACtB3R,MAAOa,EACP8S,UAAQ,EACRD,QAAS,SAAC/T,GACR8T,EAAUrB,GAAazS,IACvB8T,EAAU3B,GAAcnS,IACxB6T,EAAgBI,SAASjU,EAAEqS,cAAchS,WAG7C,cAACyQ,GAAD,CAAcC,OAAQA,EAAQ3U,KAAM6T,GAAgB+B,kBAEtD,uBAAOtO,KAAK,SAASrD,MAAM,eAAKsL,QApEhB,WACpB5D,EAAK,IAAI3G,EAAWhF,EAAMuX,EAAazS,IAAe1C,MAAK,WACzDkV,EAAQ,IACRE,EAAe,GACfC,EAAgB,OAgE0CrG,UAAW2F,OAErE,eAACtB,GAAD,CAAOhM,UAAU,QAAjB,UACE,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,aAAf,0BACA,qBAAKA,UAAU,aAAf,0BACA,qBAAKA,UAAU,aAAf,sCACA,qBAAKA,UAAU,aAAf,4CACA,qBAAKA,UAAU,kBAEjB,qBAAKA,UAAU,kBAAf,gBACGS,QADH,IACGA,OADH,EACGA,EAAMpE,KAAI,SAACkS,EAAe3E,GAAhB,OACT,sBAAiB5J,UAAU,YAA3B,UACE,qBAAKA,UAAU,aAAf,SAA6B4J,EAAQ,IACrC,qBAAK5J,UAAU,aAAf,SAA6BuO,EAAExT,OAC/B,qBAAKiF,UAAU,aAAf,SAA6BuO,EAAE/T,QAC/B,qBAAKwF,UAAU,aAAf,SAA6BuO,EAAElT,eAC/B,qBAAK2E,UAAU,aAAf,SACE,cAACuL,GAAD,CAASzF,QAAS,kBAAMtD,EAAO+L,EAAE7U,KAAjC,8BANM6U,EAAEzT,gBCnGjB,I,SAOM2T,GAAqC,CAChD,CACE3T,IAAK,aACLC,KAAM,2BACNoH,KAAMzH,EAASgU,WAEjB,CACE5T,IAAK,eACLC,KAAM,2BACNoH,KAAMzH,EAASiU,oBAEjB,CACE7T,IAAK,YACLC,KAAM,eACNoH,KAAMzH,EAASkT,cAEjB,CACE9S,IAAK,cACLC,KAAM,eACNoH,KAAMzH,EAAS8T,gBAEjB,CACE1T,IAAK,UACLC,KAAM,eACNoH,KAAMzH,EAASkU,iBAEjB,CACE9T,IAAK,SACLC,KAAM,eACNoH,KAAMzH,EAASmU,iBAEjB,CACE/T,IAAK,QACLC,KAAM,eACNoH,KAAMzH,EAASoU,Y,SC1CNC,GAAoBnP,KAAOC,IAAV,4RAgBjBmP,GAAMpP,KAAOC,IAAV,6GAOD,SAASoP,GAAYxX,GAA6B,IACvDyX,EAAYzX,EAAZyX,QACR,OACE,cAACF,GAAD,UACE,cAACD,GAAD,CAAmB/O,UAAU,cAAc0K,MAAO,CAAEyE,MAAM,GAAD,OAAKD,EAAL,MAAzD,SACE,yCAAUA,EAAV,WC7BD,IAAME,GAAOxP,KAAOC,IAAV,qLCCV,ICaKwP,GDbCC,GAIX,WAAYzU,GAAc,yBAH1BnB,QAGyB,OAFzBmB,SAEyB,EACvBtD,KAAKmC,GAAKuB,cACV1D,KAAKsD,IAAL,OAAWA,QAAX,IAAWA,IAAO,K,SCOVwU,K,cAAAA,E,kBAAAA,E,sBAAAA,E,eAAAA,Q,2BAONE,GAUJ,WAAYC,GAAkC,IAAD,iCAT7CC,SAAoB,EASyB,KAR7CC,aAAwB,EAQqB,KAP7CC,aAAwB,EAOqB,KAL7CC,SAAY,EAKiC,KAJ7CnP,KAAgB,GAI6B,KAH7CoP,cAA2B,GAGkB,KAF7CC,SAAsB,GAGpBvY,KAAKqY,SAAL,iBAAgBJ,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAcI,gBAA9B,QAA0C,EAC1CrY,KAAKkJ,KAAL,iBAAY+O,QAAZ,IAAYA,OAAZ,EAAYA,EAAc/O,YAA1B,QAAkC,GAClClJ,KAAKsY,cAAL,iBAAqBL,QAArB,IAAqBA,OAArB,EAAqBA,EAAcK,qBAAnC,QAAoD,GACpDtY,KAAKuY,SAAL,iBAAgBN,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAcM,gBAA9B,QAA0C,IClC/B,SAASC,GAAgB9O,GACtC,OAAO,IAAI9E,MAAM8E,GAAQ7E,KAAK,IAAIC,KAAI,kBAAMpB,iBCkBvC,IAAM+U,GAAWpQ,KAAO+L,MAAV,6RAmBRsE,GAAkBrQ,KAAOC,IAAV,sKAUtBqQ,GAAYtQ,KAAOC,IAAV,sEAKTsQ,GAAavQ,KAAOC,IAAV,4JASVuQ,GAAWxQ,KAAOC,IAAV,yEACV,SAACpI,GAAD,OACAA,EAAMuD,YACN6J,aADA,+DAUG,SAASwL,GAAW5Y,GAA+B,IAAD,EAC/C0I,EAAc1I,EAAd0I,UACFmQ,EAAmBxY,iBAAyB,MAFK,EAInCC,mBAAiB,KAA9BwY,EAJgD,sBAKlCxY,mBAAiB,KAA/ByY,EALgD,sBAMrBzY,mBAAmBgY,GAR9B,KAEgC,mBAMhDU,EANgD,KAMrCC,EANqC,OAOrB3Y,mBAAqB,IAPA,mBAOhD4Y,EAPgD,KAOrCC,EAPqC,OAQb7Y,qBARa,mBAQhD8Y,EARgD,KAQjCC,EARiC,OASb/Y,mBAAkC,MATrB,mBAShDgZ,EATgD,KASjCC,EATiC,KAU/C9O,EAAShC,GAAc,YAAD,OAAaC,IAAnC+B,KAV+C,EC1E1C,SAAsB+O,GAAoC,IAAD,EAClClZ,oBAAkB,GADgB,mBAC/DmZ,EAD+D,KACnDC,EADmD,OAE5CpZ,qBAF4C,mBAE/DqZ,EAF+D,KAExDC,EAFwD,KAIhEC,EAAmBC,uBAAY,SAACC,GACpCA,EAAMC,iBACNN,GAAc,KACb,IAEGO,EAAmBH,uBAAY,SAACC,GACpCA,EAAMC,iBACNN,GAAc,KACb,IAEGQ,EAAkBJ,uBAAY,SAACC,GACnCA,EAAMC,iBACNN,GAAc,KACb,IAEGS,EAAkBL,uBAAY,SAACC,GAAsB,IAAD,IACxDA,EAAMC,iBACND,EAAMK,mBACN,UAAAL,EAAMM,oBAAN,eAAoBV,QAASC,EAAQ,UAACG,EAAMM,oBAAP,aAAC,EAAoBV,OAC1DD,GAAc,KACb,IAoBH,OAlBAhZ,qBAAU,WAQR,OAPI8Y,IACFA,EAAcc,iBAAiB,OAAQH,GACvCX,EAAcc,iBAAiB,YAAaT,GAC5CL,EAAcc,iBAAiB,YAAaL,GAC5CT,EAAcc,iBAAiB,WAAYJ,IAGtC,WACDV,IACFA,EAAce,oBAAoB,OAAQJ,GAC1CX,EAAce,oBAAoB,YAAaV,GAC/CL,EAAce,oBAAoB,YAAaN,GAC/CT,EAAce,oBAAoB,YAAaL,OAGlD,CAACV,IAEG,CAAEG,QAAOF,cD0Cce,CAAalB,GAAnCG,EAZ+C,EAY/CA,WAAYE,EAZmC,EAYnCA,MACdc,EEtFW,SAACC,GAAD,OACf,IAAI1Z,SAAkB,SAACC,GACrB,IAAM0Z,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACnY,GAAO,IAAD,GACrB,UAAIA,EAAEoY,cAAN,aAAI,EAAUC,SACZ9Z,EAAQ,IAAI4W,GAASnV,EAAEoY,OAAOC,UAIlCJ,EAAOK,cAAcN,OFgE8B,EFRhD7H,sBA3BS,SAAC3M,EAAyBC,GAA4D,IAAD,MACnG,OAAQA,EAAOC,MACb,KAAKwR,GAAqBqD,MACxB,OAAO,2BAAK/U,GAAZ,IAAmB8R,SAAS,EAAMhP,KAAM7C,EAAOG,KAAK0C,KAAMoP,cAAe,KAC3E,KAAKR,GAAqBsD,QACxB,KAAI,UAAChV,EAAM8C,YAAP,aAAC,EAAYQ,QACf,OAAOtD,EAGT,IAAMI,EAAOH,EAAOG,KACd6U,EAAkB,UAAGjV,EAAMkS,qBAAT,QAA0B,GAC5CgD,EAAmB,UAAG9U,EAAK8R,qBAAR,QAAyB,GAC5CiD,EAAmBF,EAAmB/T,OAAOgU,GAC7CjD,EAAYkD,EAAiB7R,OAAStD,EAAM8C,KAAKQ,OAAU,IAC3DiO,EAAUxF,KAAKqJ,MAAMnD,GAErBoD,EACJF,EAAiB7R,SAAWtD,EAAM8C,KAAKQ,OACnC,CAAE0O,aAAa,EAAMD,aAAa,GAClC,CAAEA,aAAa,EAAMC,aAAa,GAExC,OAAO,uCAAKhS,GAAUqV,GAAtB,IAA8BvD,SAAS,EAAOG,SAAUV,EAASW,cAAeiD,IAClF,QACE,OAAOnV,KAIc,IAAI4R,IEQwB,mBAehDC,EAfgD,KAelCyD,EAfkC,KAiBjDC,EAAe,SAAC9B,GACpB,GAAKA,EAAMnQ,OAAX,CF1FG,IAAqBR,EE8FxBwS,GF9FwBxS,EE8FI2Q,EF7FvB,CAAEvT,KAAMwR,GAAqBqD,MAAO3U,KAAM,CAAE0C,WEwFX,qBAMnB2Q,GANmB,yBAM3Be,EAN2B,QAO9BgB,EAAOjd,EAAW6D,MAAX,UAAoBoG,EAApB,YAAiCgS,EAAK5b,OAAQ6c,IAAIjB,EAAM,CAAEkB,YAAa,eACpFF,EAAKxQ,GAAG,gBAAiB,KAAM,MAAM,WACnC,IAAM2Q,EAAUH,EAAK5R,SAASnL,IAC9Bkd,EAAQC,iBAAiB5a,MAAK,SAACkC,GF/FhC,IAAmB2Y,EEgGhBtR,EAAK,IAAI5F,EAAS,CAAE/F,KAAM+c,EAAQ/c,KAAMsE,MAAKmB,UAAW1G,IAASW,SAAS4R,YAAYC,aACtFmL,GFjGgBO,EEiGU3Y,EFhG3B,CAAEgD,KAAMwR,GAAqBsD,QAAS5U,KAAM,CAAE8R,cAAe,CAAC2D,cE0FnE,2BAA2B,IANW,iCAkBlCC,EAAY,SAACrC,GACbA,GAASA,EAAMnQ,SACjB9E,MAAMuX,KAAKtC,GAAO/U,KAAI,SAAC8V,GACrBD,EAASC,GAAMxZ,MAAK,SAACgb,GACnB/C,GAAa,SAACgD,GAAD,OAAUA,EAAK/U,OAAO8U,OAClC9C,GAAiBC,EAAiB6C,SAIvClD,EAAUxP,OAAS,GAAKyP,GAAa,SAACjQ,GAAD,OAAUsP,GAAgBtP,EAAKQ,OAASmQ,EAAMnQ,aAkCvF,OAdA9I,qBAAU,WACJqX,EAAaG,cACfiB,EAAa,IACbF,EAAaX,GArEM,KAsEnBe,EAAiB,SAElB,CAACtB,IAEJrX,qBAAU,YACR,OAAIiZ,QAAJ,IAAIA,OAAJ,EAAIA,EAAOnQ,SACTwS,EAAUrC,KAEX,CAACA,IAGF,sBAAKpR,UAAU,OAAO0K,MAAO,CAAEmJ,OAAQrD,GAAvC,UACE,eAACR,GAAD,CAAUhQ,UAAU,kBAAkB5J,IAAK4a,EAA3C,UACE,sBAAKhR,UAAU,6BAAf,UACE,mBAAGA,UAAU,2BACb,oDAEF,uBACEnC,KAAK,OACLzH,IAAKka,EACLwD,UAAQ,EACRhN,SAAU,0BAAM2M,EAAS,iBAACnD,QAAD,IAACA,GAAD,UAACA,EAAkB9X,eAAnB,aAAC,EAA2B4Y,aAA5B,QAAqC,SAE/DP,GACC,cAACV,GAAD,UACE,qBAAKpK,IAAK8K,EAAchW,QAG3BqW,GAAc,cAACjB,GAAD,OAEjB,sBAAKjQ,UAAU,sCAAf,UACE,eAACoP,GAAD,CAAM1E,MAAO,CAAEyE,MAAOoB,GAAtB,UACGI,EAAUtU,KAAI,SAAC8V,EAAgBvI,GAAjB,OACb,eAACwG,GAAD,CAEEpQ,UAAU,WACVhF,WAAYmX,EAAKzY,MAAL,OAAYmX,QAAZ,IAAYA,OAAZ,EAAYA,EAAenX,IACvCoM,QAAS,kBAAMgL,EAAiBqB,IAJlC,UAME,qBAAKpM,IAAKoM,EAAKtX,MACf,mBACEmF,UAAU,4BACV0K,MAAO,CAAEzC,IAAK,EAAG8L,MAAO,GACxBjO,QAAS,kBAzDG,SAACqM,GACzBvB,GAAa,SAACoD,GACZ,IAAMC,EAAYD,EAAKlV,QAAO,SAACoV,GAAD,OAAcA,EAASxa,KAAOyY,EAAKzY,MAGjE,OAFAyY,EAAKzY,MAAL,OAAYmX,QAAZ,IAAYA,OAAZ,EAAYA,EAAenX,KAAMoX,EAAiB,MAChDmD,EAAUhT,QAAU6P,EAAiBmD,EAAU,IAC1CA,KAETvD,GAAa,SAACyD,GAAD,OAAWA,EAAMtV,OAAO5D,kBAkDVmZ,CAAkBjC,QAT9BA,EAAKzY,OAab+W,EAAUpU,KAAI,SAACvB,GAAD,OACb,cAACoV,GAAD,GAAgBpV,UAGlB0U,EAAaE,aACb,cAACnE,GAAD,CAAS1N,KAAK,SAASiI,QAxEX,WAAO,IAAD,IAClBuO,EAAYlY,MAAMuX,KAAN,OAAWtC,QAAX,IAAWA,IAAS,IAChCkD,EAAcnY,MAAMuX,KAAN,iBAAWpD,QAAX,IAAWA,GAAX,UAAWA,EAAkB9X,eAA7B,aAAW,EAA2B4Y,aAAtC,QAA+C,IACnE8B,EAAaoB,EAAYzV,OAAOwV,KAqEmB1M,UAAWgJ,EAAU1P,OAAlE,sCAIDuO,EAAaE,aAAe,cAACT,GAAD,CAAaC,QAAO,UAAEM,EAAaI,gBAAf,QAA2B,UGjMrE,SAAS2E,GAAgB9c,GAA+B,IAC7D0I,EAAc1I,EAAd0I,UACAqC,EAAWtC,GAAc,YAAzBsC,OAOR,OACE,qCACE,cAAC6N,GAAD,CAAYlQ,UAAWA,IACvB,uBACA,qBAAKH,UAAU,gBAAf,4CACA,qBAAKA,UAAU,6BAAf,SACE,cAACiF,GAAD,CACEL,OAAO,OACPO,YAAY,EACZhF,UAAS,mBAAcA,GACvBkF,aAfY,SAAC3G,GACnBxI,EAAW6D,MAAX,UAAoBoG,EAApB,YAAiCzB,EAAKnI,OAAQie,SAC9ChS,EAAO,GAAD,OAAIrC,EAAJ,YAAiBzB,EAAKhF,a,ICbX+a,GAOnB,WAAYrN,EAAe7Q,GAAe,yBAN1CmD,QAMyC,OALzCoB,SAKyC,OAJzCvE,UAIyC,OAHzC6Q,WAGyC,OAFzCsN,cAEyC,EACvCnd,KAAKuD,IAAMsM,EACX7P,KAAK6P,MAAQA,EACb7P,KAAKhB,KAAOA,EACZgB,KAAKmd,UAAW,GCCL,SAASC,KAAuB,IAAD,EAClB5c,mBAAiB,IADC,mBACrCqP,EADqC,KAC9BwN,EAD8B,OAEJ7c,mBAAiB,IAFb,mBAErC8c,EAFqC,KAEvBC,EAFuB,OAGN5U,GAAoB,aAAlDO,EAHoC,EAGpCA,KAAMyB,EAH8B,EAG9BA,KAAMM,EAHwB,EAGxBA,OAAQC,EAHgB,EAGhBA,MAHgB,EAMhBqK,KANgB,mBAMrC5B,EANqC,KAM7B+C,EAN6B,KAOpCX,EAAaF,GAAqBlC,EAAQd,GAAgB6B,MAAO7B,GAAgB8B,MAAjFoB,SAMFyH,EAAe,SAACrb,EAAYsZ,GAAb,OAAiCvQ,EAAM/I,EAAI,CAAEgb,SAAU1B,KAW5E,OACE,qCACE,eAACpH,GAAD,WACE,eAACF,GAAD,WACE,qBAAK1L,UAAU,QAAf,4BACA,uBACEnC,KAAK,OACLmC,UAAU,OACVgV,QC3CwB,mBD4CxBxa,MAAO4M,EACP7Q,KAAM6T,GAAgB6B,MACtBkC,UAAQ,EACRD,QArBe,SAAC/T,GACxB8T,EhBPG,SAAqB9T,GAC1B,MAAO,CACL0D,KAAMwM,GAAcc,OACpBoB,UAAWpS,EAAEqS,cAAcjW,KAC3BkW,QAAStS,EAAEqS,cAAcE,SAASuI,iBgBGxBC,CAAY/a,IACtBya,EAASza,EAAEqS,cAAchS,UAqBnB,cAACyQ,GAAD,CAAcC,OAAQA,EAAQ3U,KAAM6T,GAAgB6B,WAEtD,eAACP,GAAD,WACE,qBAAK1L,UAAU,QAAf,wCACA,uBACEnC,KAAK,OACLmC,UAAU,OACVxF,MAAOqa,EACPte,KAAM6T,GAAgB8B,KACtBgC,QA3BgB,SAAC/T,GACzB8T,EAAU3B,GAAcnS,IACxB2a,EAAgB3a,EAAEqS,cAAchS,QA0BxB2T,UAAQ,IAEV,cAAClD,GAAD,CAAcC,OAAQA,EAAQ3U,KAAM6T,GAAgB8B,UAEtD,uBAAOrO,KAAK,SAASrD,MAAM,eAAKsL,QA1CtB,WACd5D,EAAK,IAAIiT,GAAK/N,EAAOyN,GAAezN,GAAOzO,MAAK,SAACiB,GAAD,OAAYA,GAASgb,EAAS,QAyCxBjN,UAAW2F,OAE/D,eAACtB,GAAD,CAAOhM,UAAU,QAAjB,UACE,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,aAAf,0BACA,qBAAKA,UAAU,aAAf,sCACA,qBAAKA,UAAU,aAAf,sCACA,qBAAKA,UAAU,aAAf,sCACA,qBAAKA,UAAU,kBAEjB,qBAAKA,UAAU,kBAAf,SACGS,IAAI,OACHA,QADG,IACHA,OADG,EACHA,EAAMpE,KAAI,SAACkS,EAAS3E,GAAV,OACR,qBAAe5J,UAAU,YAAzB,UACE,qBAAKA,UAAU,aAAf,SAA6B4J,EAAQ,IACrC,qBAAK5J,UAAU,aAAf,SAA6BuO,EAAEnH,QAC/B,qBAAKpH,UAAU,aAAf,SAA6BuO,EAAEhY,OAC/B,sBAAKyJ,UAAU,aAAf,UACE,kCACE,uBAEEtG,GAAG,WACHmE,KAAK,QACLtH,KAAI,mBAAcqT,GAClB/C,UAAW0H,EAAEmG,SACb5N,SAAU,kBAAMiO,EAAaxG,EAAEzT,KAAK,KANtC,UACUyT,EAAE7U,GADZ,cADF,kBAWA,kCACE,uBAEEA,GAAG,aACHmE,KAAK,QACLtH,KAAI,mBAAcqT,GAClB/C,SAAU0H,EAAEmG,SACZ5N,SAAU,kBAAMiO,EAAaxG,EAAEzT,KAAK,KANtC,UACUyT,EAAE7U,GADZ,gBADF,qBAYF,qBAAKsG,UAAU,uBAAf,SACE,cAACuL,GAAD,CAASzF,QAAS,kBArFdpM,EAqF+B6U,EAAE7U,GArFlB8I,EAAO9I,GAAvB,IAACA,GAqFJ,8BA7BK6U,EAAE7U,gBElEzB,I,GAAM0b,GAAO,CAAEjT,KAAM,YAAaL,GAAI7B,GAAQ8B,MAE/B,SAAS4M,KAAsB,IAAD,IAC7B0G,EAAcnV,GAAoB,aAAxCO,KADmC,EAEPP,GAA2B,mBAAmB,EAAOkV,IAA3EE,EAF6B,EAEnC7U,KAAgBG,EAFmB,EAEnBA,QAFmB,EAInB7I,mBAAwB,IAJL,gCAKPA,sBALO,mBAKpCwd,EALoC,KAKxBC,EALwB,OAMLzd,mBAAiB,GANZ,mBAMpC0d,EANoC,KAMvBC,EANuB,KAe3Cvd,qBAAU,YACR,OAAIod,QAAJ,IAAIA,OAAJ,EAAIA,EAAY7b,KACdkH,EAAQ2U,EAAW7b,MAEpB,CAAC6b,IAEJ,IARiBI,EAQXC,EAAQ,SAACvH,GAAD,OAAkBqH,GAAe,SAAC1B,GAAD,OAAUA,EAAO3F,MAEhE,OACE,sBAAKrO,UAAU,iDAAf,UACE,eAAC0L,GAAD,CAAW9E,QAAQ,aAAnB,UACE,qBAAK5G,UAAU,QAAf,yDACA,uBACES,KAAK,YACL5C,KAAK,OACLtH,KAAK,aACLmD,GAAG,aACHc,MAAK,OAAE+a,QAAF,IAAEA,OAAF,EAAEA,EAAY7b,GACnBoN,SAAU,SAAC3M,GAAD,OAzBC,SAACK,GAClB,IAAMjC,EAAO8c,EAAUQ,MAAK,SAACtd,GAAD,OAAUA,EAAKmB,KAAOc,KAClDgb,EAAcjd,GAuBSud,CAAW3b,EAAEqS,cAAchS,UAE9C,0BAAUd,GAAG,YAAb,SACG2b,EAAUhZ,KAAI,SAAC9D,GAAD,OACb,wBAAsBiC,MAAOjC,EAAK6O,OAArB7O,EAAKmB,YAIxB,sBAAKsG,UAAU,wCAAwC0K,MAAO,CAAEyE,MAAO,IAAK0E,OAAQ,KAApF,YACKyB,EAASrU,QACV,sBAAKjB,UAAU,mDAAf,UACE,sBAAKA,UAAU,sCAAf,UACE,gDAAOuV,QAAP,IAAOA,OAAP,EAAOA,EAAYhf,YAAnB,QAA2B,iBAC3B,gCAjCKof,EAiCS,UAACL,EAASG,UAAV,aAAC,EAAuBzZ,UAjCN2Z,EAAO,IAAII,KAAKJ,GAAgBK,iBAAmB,uCAmCrF,cAACvK,GAAD,CAAa/C,QAAQ,EAAM5C,QAAS,kBAAM8P,GAAO,IAAIjO,SAAU2N,EAASrU,QAAU,GAAqB,IAAhBwU,IACvF,qBAAKzV,UAAU,2BAAf,SACG,cAACmJ,GAAD,CAAS9L,YAAaiY,EAASG,GAAc9N,UAAU,MAE1D,cAAC8D,GAAD,CACE9D,SAAU2N,EAASrU,QAAU,GAAKwU,GAAeH,EAASrU,OAAS,EACnE6E,QAAS,kBAAM8P,EAAM,UAKzBN,EAASrU,QACT,sBAAKjB,UAAU,yFAAf,UACE,mBAAGA,UAAU,4BADf,oCC/DK,SAASiW,KAAoB,IAClCpb,EAAQqb,cAARrb,IAER,OACE,sBAAKmF,UAAU,cAAf,UACE,cAACuK,GAAD,CAAqBC,WAAYiE,GAAsBhE,WAAY5P,IACnE,qBAAKmF,UAAU,8BAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmC,KAAI,UAAKtH,GAAL,OAAWH,EAASgU,WAA/B,SACE,cAACiG,GAAD,MAEF,cAAC,IAAD,CAAOxS,KAAI,UAAKtH,GAAL,OAAWH,EAASiU,oBAA/B,SACE,cAACA,GAAD,MAEF,cAAC,IAAD,CAAOxM,KAAI,UAAKtH,GAAL,OAAWH,EAASkT,cAA/B,SACE,cAACA,GAAD,MAEF,cAAC,IAAD,CAAOzL,KAAI,UAAKtH,GAAL,OAAWH,EAAS8T,gBAA/B,SACE,cAACA,GAAD,MAEF,cAAC,IAAD,CAAOrM,KAAI,UAAKtH,GAAL,OAAWH,EAASkU,iBAA/B,SACE,cAAC2F,GAAD,CAAqCpU,UAAU,iBAA1B,mBAEvB,cAAC,IAAD,CAAOgC,KAAI,UAAKtH,GAAL,OAAWH,EAASmU,iBAA/B,SACE,cAAC0F,GAAD,CAAoCpU,UAAU,gBAAzB,kBAEvB,cAAC,IAAD,CAAOgC,KAAI,UAAKtH,GAAL,OAAWH,EAASoU,WAA/B,SACE,cAACyF,GAAD,CAA8BpU,UAAU,UAAnB,YAEvB,cAAC,IAAD,CAAOgW,OAAK,EAAChU,KAAI,UAAKtH,GAAtB,SACE,cAAC,IAAD,CAAUiQ,GAAE,UAAKjQ,GAAL,OAAWH,EAASgU,uBCxBrC,SAAS0H,KACd,IAAM/O,EAAUC,cACRzN,EAAc5C,IAAd4C,UAFkB,EAGY9B,mBAAS,IAHrB,mBAGnBse,EAHmB,KAGNC,EAHM,KAIlBhgB,EAAeD,IAAfC,WACAigB,ECZD,CAAEA,MARK,SAACC,GAAD,OAA0B,SAAChF,GACrB,UAAdA,EAAM1W,KAAkC,UAAf0W,EAAMiF,OACjCjF,EAAMK,kBACNL,EAAMC,iBACN+E,QDgBID,MALkB,EAQEzJ,KARF,mBAQnB5B,EARmB,KAQX+C,EARW,OASQb,GAAqBlC,EAAQd,GAAgBkB,SAAvEgC,EATkB,EASlBA,SAAUC,EATQ,EASRA,YAEZmJ,EAAiB,WACjBzJ,GAAaoJ,IAIjBxc,EAAUwc,GAAa1d,MAAK,SAACge,GAC3B,IpBpBoBC,EoBoBdre,EAAaoe,EAAShV,MACtB/H,GAAS+c,EAASnV,WAAajJ,EAAKmc,SAE1CzG,GpBvBoB2I,EoBuBAhd,EpBtBjB,CACLiE,KAAMwM,GAAclR,KACpBoT,UAAWnC,GAAgBkB,QAC3BmB,QAASmK,KoBoBHhd,IAGJtD,EAAWqE,EAAMpC,GACjB8O,EAAQhF,KAAK3H,EAASyP,sBAI1B,OACE,qBAAKnK,UAAU,qEAAf,SACE,eAAC4L,GAAD,CAAOE,UAAU,SAAS9L,UAAU,sBAAsB+L,YAAY,QAAtE,UACE,eAACL,GAAD,WACE,qBAAK1L,UAAU,QAAf,+DACA,uBACEkO,QAAS,SAAC/T,GACRoT,GAAY,GACZ+I,EAAenc,EAAEqS,cAAchS,QAEjCqc,WAAYN,EAAMG,SAGpBpJ,GAAY,cAACrC,GAAD,CAAcC,OAAQA,EAAQ3U,KAAM6T,GAAgBkB,UAClE,uBAAOzN,KAAK,SAASiI,QAAS4Q,EAAgBlc,MAAM,sBE9C5D,IAAMsc,GAAYlX,KAAOC,IAAV,wGAOA,SAASkL,KACtB,IAAM1D,EAAUC,cADsB,EAEZvP,mBAAS,IAFG,mBAE/BgB,EAF+B,KAExBge,EAFwB,OAGNhf,mBAAS,IAHH,mBAG/BiB,EAH+B,KAGrBge,EAHqB,KAI9Ble,EAAe7B,IAAf6B,WACAyd,EDhBD,CAAEA,MARK,SAACC,GAAD,OAA0B,SAAChF,GACrB,UAAdA,EAAM1W,KAAkC,UAAf0W,EAAMiF,OACjCjF,EAAMK,kBACNL,EAAMC,iBACN+E,QCoBID,MACAve,EAAYf,IAAZe,QAN8B,EASV8U,KATU,mBAS/B5B,EAT+B,KASvB+C,EATuB,OAUJb,GAAqBlC,EAAQd,GAAgBkB,SAAvEgC,EAV8B,EAU9BA,SAAUC,EAVoB,EAUpBA,YAYZ0J,EAAiB,WACrBne,EAAWC,EAAOC,GACfL,MAAK,SAACY,GACL8N,EAAQhF,KAAK3H,EAASub,qBAEvBtc,OAAM,SAACQ,GtB1CP,IAAsB+c,EsB2CrBjJ,GtB3CqBiJ,GsB2CE,EtB1CtB,CACLrZ,KAAMwM,GAAciB,QACpBiB,UAAWnC,GAAgBkB,QAC3BmB,QAASyK,KsBwCL3J,GAAY,OAIlB,OACE,mCACGvV,EACC,cAAC,IAAD,CAAU8S,GAAI,CAAEqM,SAAUzc,EAASub,oBAEnC,sBAAKjW,UAAU,iDAAf,UACE,cAAC8W,GAAD,CAAW9W,UAAU,oBACrB,qBAAKA,UAAU,+CAAf,SACE,eAAC4L,GAAD,CAAOE,UAAU,SAAS9L,UAAU,eAAe0K,MAAO,CAAEyE,MAAO,SAAnE,UACE,eAACzD,GAAD,CAAW1L,UAAU,SAArB,UACE,qBAAKA,UAAU,QAAf,0BACA,uBAAOkO,QAhCF,SAAC/T,GAClBoT,GAAY,GACZwJ,EAAS5c,EAAEqS,cAAchS,QA8Beqc,WAAYN,EAAMU,QAEhD,eAACvL,GAAD,CAAW1L,UAAU,QAArB,UACE,qBAAKA,UAAU,QAAf,0BACA,uBAAOnC,KAAK,WAAWqQ,QA/Bf,SAAC/T,GACrBoT,GAAY,GACZyJ,EAAY7c,EAAEqS,cAAchS,QA6B+Bqc,WAAYN,EAAMU,QAEnE,uBAAOpZ,KAAK,SAASiI,QAASmR,EAAgBzc,MAAM,kBAClD8S,GAAY,cAACrC,GAAD,CAAcC,OAAQA,EAAQ3U,KAAM6T,GAAgBkB,oBCjEzE,SAASvD,KAAgB,IAAD,EACGhQ,oBAAS,GADZ,mBACtBqf,EADsB,KACZC,EADY,KAErBhd,EAAepD,IAAfoD,WAQR,OANAlC,qBAAU,WACRmf,YAAW,WACTD,GAAY,GACZhd,MACC,OACF,IAED,sBAAK2F,UAAU,0DAAf,UACE,uBAAOA,UAAU,WAAjB,sCACA,uBAAOA,UAAU,eAAjB,gFACA,cAACD,GAAD,IACCqX,GAAY,cAAC,IAAD,CAAUtM,GAAIpQ,EAAS0b,e,aCX7BmB,GAAY,SAAC,GAA2C,IAAzC7f,EAAwC,EAAxCA,SAAa8f,EAA2B,6BAC1DlgB,EAAWL,IAAXK,OAER,OACE,cAAC,IAAD,2BACMkgB,GADN,IAEEC,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACNpgB,EAASI,EAAW,cAAC,IAAD,CAAUoT,GAAI,CAAEqM,SAAUzc,EAAS0b,UAAWzY,MAAO,CAAE+V,KAAMgE,WAMlF,SAASC,GAAT,GAA4D,IAAtCjgB,EAAqC,EAArCA,SAAa8f,EAAwB,6BACxDxf,EAAYf,IAAZe,QAER,OACE,cAAC,IAAD,2BACMwf,GADN,IAEEC,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACN1f,EAAUN,EAAW,cAAC,IAAD,CAAUoT,GAAI,CAAEqM,SAAUzc,EAASqQ,cAAepN,MAAO,CAAE+V,KAAMgE,UCpB/E,SAASE,KACtB,OACE,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOzV,KAAMzH,EAAS0b,UAAtB,SACE,cAACA,GAAD,MAEF,cAAC,GAAD,CAAWjU,KAAMzH,EAASyP,gBAA1B,SACE,cAAC,GAAD,MAEF,cAACwN,GAAD,CAAYxV,KAAMzH,EAASub,iBAA3B,SACE,cAACA,GAAD,MAEF,cAAC,IAAD,CAAO9T,KAAMzH,EAASqQ,cAAtB,SACE,cAACA,GAAD,MAEF,cAAC,IAAD,CAAO5I,KAAMzH,EAASqN,aAAtB,SACE,cAACA,GAAD,MAEF,cAAC,IAAD,CAAOoO,OAAK,EAAChU,KAAK,IAAlB,SACE,cAAC,IAAD,CAAU2I,GAAIpQ,EAAS0b,mBCxBjC,IAAMrT,GAAc8U,SAASC,eAAe,QAC5CL,iBACE,cAAC,IAAD,UACE,cAACjgB,EAAD,UACE,cAACogB,GAAD,QAGJ7U,M","file":"static/js/main.d15db23a.chunk.js","sourcesContent":["import React from 'react';\nimport { Auth } from 'src/core/models/auth';\n\nexport const authContext = React.createContext({} as Auth);\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyA7Et9JNWlPyV2WTa-tH00Z6_ex2AwJJNA',\r\n  authDomain: 'crystal-showroom.firebaseapp.com',\r\n  databaseURL: 'https://crystal-showroom-default-rtdb.firebaseio.com/',\r\n  projectId: 'crystal-showroom',\r\n  storageBucket: 'crystal-showroom.appspot.com',\r\n  messagingSenderId: '249831469600',\r\n  appId: '1:249831469600:web:ccf76daa2e4e4779780245',\r\n  measurementId: 'G-PHLW3HRD0Z',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const realtimeDB = firebase.database();\r\nexport const storageRef = firebase.storage().ref();\r\n","export default function useStorage() {\n  const setSession = (name: string, object: object) => {\n    const objectParsing = JSON.stringify(object);\n    sessionStorage.setItem(name, objectParsing);\n  };\n\n  const getSession = <T>(name: string): T | null => {\n    return sessionStorage.getItem(name) ? JSON.parse(sessionStorage.getItem(name) ?? '') : null;\n  };\n\n  return { setSession, getSession };\n}\n","import firebase from 'firebase';\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport { realtimeDB } from 'src/core/config/firebase.config';\nimport { authContext } from 'src/core/contexts/auth/auth.context';\nimport { Auth } from 'src/core/models/auth';\nimport useStorage from 'src/utils/customer-hook/useStroage';\n\nexport const useAuth = () => useContext(authContext);\n\nclass AccessRight {\n  adminToken!: string | null;\n  isUser!: boolean;\n\n  constructor(accessRight?: AccessRight) {\n    this.adminToken = accessRight?.adminToken ?? null;\n    this.isUser = accessRight?.isUser ?? false;\n  }\n}\n\nexport const useProvideAuth = (): Auth => {\n  const { getSession, setSession } = useStorage();\n  const { adminToken, isUser: userState } =\n    getSession<AccessRight>('accessRight') ?? new AccessRight({ adminToken: null, isUser: false });\n\n  const tokenRef = useRef(adminToken);\n  const [isAdmin, setIsAdmin] = useState<boolean>(!!adminToken);\n  const [isUser, setIsUser] = useState<boolean>(userState);\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n      if (!tokenRef.current) {\n        setIsAdmin(false);\n      }\n\n      Promise.resolve(user)\n        .then((user) => {\n          if (!user) {\n            setIsAdmin(false);\n          }\n\n          return user?.getIdToken();\n        })\n        .then((token) => {\n          setIsAdmin(token === tokenRef.current);\n          token !== tokenRef.current && setSession('accessRight', new AccessRight({ adminToken: null, isUser: false }));\n        });\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const adminLogin = (email: string, password: string) => {\n    return new Promise((resolve, reject) => {\n      firebase\n        .auth()\n        .setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n        .then(() => {\n          firebase\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .then((userCredential) => {\n              setIsAdmin(true);\n              setIsUser(false);\n\n              console.log(userCredential.user);\n              return userCredential.user?.getIdToken();\n            })\n            .then((id) => {\n              id && (tokenRef.current = id);\n              id && setSession('accessRight', new AccessRight({ adminToken: id, isUser: false }));\n              resolve(id);\n            })\n            .catch((error) => reject(error));\n        });\n    });\n  };\n\n  const adminLogout = () => {\n    return new Promise((resolve, reject) => {\n      firebase\n        .auth()\n        .signOut()\n        .then(() => {\n          setIsAdmin(false);\n          setIsUser(false);\n          setSession('accessRight', new AccessRight({ adminToken: null, isUser: false }));\n          resolve('log out');\n        })\n        .catch((e) => {\n          console.warn(e);\n          reject('log out fail');\n        });\n    });\n  };\n\n  const userLogin = (account: string) => {\n    return new Promise((resolve, reject) => {\n      realtimeDB\n        .ref('allowList')\n        .child(account)\n        .get()\n        .then((userCredential) => {\n          setIsAdmin(false);\n          setIsUser(true);\n          setSession('accessRight', new AccessRight({ adminToken: null, isUser: true }));\n          resolve(userCredential);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  };\n\n  const userLogout = () => {\n    return new Promise((resolve, reject) => {\n      setIsAdmin(false);\n      setIsUser(false);\n      setSession('accessRight', new AccessRight({ adminToken: null, isUser: false }));\n      resolve('log out');\n    });\n  };\n\n  return { isAdmin, isUser, adminLogin, userLogin, adminLogout, userLogout };\n};\n","import { authContext } from 'src/core/contexts/auth/auth.context';\nimport { useProvideAuth } from 'src/utils/customer-hook/useAuth';\n\nexport function AuthProvider(props: { children: JSX.Element | JSX.Element[] }) {\n  const { children } = props;\n  const authProvider = useProvideAuth();\n  return <authContext.Provider value={authProvider}>{children}</authContext.Provider>;\n}\n","export enum ControlPanelState {\r\n  HandSize,\r\n  SliverPipe,\r\n  Crystal,\r\n  FlowerCover,\r\n  Charm,\r\n}\r\n","export enum MainPath {\r\n  UserLogin = '/userLogin',\r\n  EmployeeLogin = '/employeeLogin',\r\n  CrystalShowroom = '/crystalShowroom',\r\n  CrystalDashboard = '/crystalDashboard',\r\n  AllowList = '/allowList',\r\n  CrystalProductList = '/crystalProductList',\r\n  HandSizeForm = '/handSizes',\r\n  SliverPipeForm = '/sliverPipes',\r\n  CrystalBeadForm = '/crystalBeads',\r\n  FlowerCoverForm = '/flowerCover',\r\n  CompletePage = '/completePage',\r\n  CharmForm = '/charm',\r\n}\r\n","export const USER = 'user';\r\n","import { v4 as uuidv4 } from 'uuid';\n\nexport default class SelectedItem {\n  id!: string;\n\n  key!: string;\n\n  text?: string;\n\n  value?: number | string;\n\n  url?: string;\n\n  isSelected?: boolean;\n\n  constructor(name?: string, url?: string) {\n    this.key = uuidv4();\n    this.text = name ?? '';\n    this.url = url ?? '';\n    this.isSelected = false;\n  }\n}\n\nexport class HandSize extends SelectedItem {\n  radiusWidth!: number;\n  crystalCount!: number;\n  beadSize!: number;\n\n  constructor(name: string, value: number, count: number) {\n    super();\n    this.text = name;\n    this.value = value;\n    this.radiusWidth = 180;\n    this.crystalCount = count;\n    this.beadSize = (360 / count) * 3 + 3;\n  }\n}\n\nexport class SliverPipe extends SelectedItem {\n  crystalCount!: number;\n\n  constructor(name: string, value: number, count: number) {\n    super();\n    this.text = name;\n    this.value = value;\n    this.crystalCount = count;\n  }\n}\n","import { FileInfo } from 'src/core/models/file-info';\nimport SelectedItem from 'src/core/models/selection';\n\nexport default class Crystal extends SelectedItem {\n  key!: string;\n\n  text?: string;\n\n  value?: number | string;\n\n  url?: string;\n\n  isSelected?: boolean;\n\n  leftFlower!: FileInfo;\n\n  rightFlower!: FileInfo;\n\n  charm?: FileInfo;\n\n  constructor(key?: string, url?: string) {\n    super(key);\n    this.key = key ?? '';\n    this.url = url ?? '';\n  }\n}\n","import SelectedItem, { HandSize } from './selection';\nimport Crystal from 'src/core/models/crystal';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default class CrystalRing {\n  id!: string;\n\n  handSize!: HandSize;\n\n  sliverPipe!: SelectedItem;\n\n  beads: Crystal[] = [];\n\n  createdAt!: Object | number;\n\n  setHandSize(handSize: HandSize) {\n    this.handSize = handSize;\n  }\n\n  setSliverPipe(sliverPipe: SelectedItem) {\n    this.sliverPipe = sliverPipe;\n  }\n\n  setBeads(beads: Crystal[]) {\n    this.beads = beads;\n  }\n\n  setCreatedTime(createTime: Object | number) {\n    this.createdAt = createTime;\n  }\n\n  createBeads(count: number) {\n    this.beads = this.generateBeads(count);\n  }\n\n  private generateBeads(count: number) {\n    return new Array(count).fill(-1).map(() => new Crystal(uuidv4()));\n  }\n}\n","export class FileInfo {\n  id?: string;\n  name?: string;\n  url?: string;\n  createdAt?: number | Object;\n\n  constructor(fileInfo?: FileInfo) {\n    this.name = fileInfo?.name ?? '';\n    this.url = fileInfo?.url ?? '';\n    this.createdAt = fileInfo?.createdAt ?? undefined;\n  }\n}\n","import { HandSize, SliverPipe } from '../../models/selection';\nimport React from 'react';\nimport Action from '../../models/action';\n\nimport SelectedItem from '../../models/selection';\n\nimport CrystalRing from 'src/core/models/crystal-ring';\nimport { FileInfo } from 'src/core/models/file-info';\n\nexport const INIT_CRYSTAL_SHOWROOM = 'INIT_CRYSTAL_SHOWROOM';\n\nexport const UPDATED_SELECTED_BEAD = 'SELECT_BEAD';\nexport const SELECT_DISPLAY_CRYSTAL_BEAD = 'SELECT_CRYSTAL_BEAD';\nexport const REMOVE_DISPLAY_SELECTED_CRYSTAL_BEAD = 'REMOVE_SELECTED_CRYSTAL_BEAD';\n\nexport const ADD_FLOWER_COVER_ON_LEFT = 'ADD_FLOWER_COVER_ON_LEFT';\nexport const ADD_FLOWER_COVER_ON_RIGHT = 'ADD_FLOWER_COVER_ON_RIGHT';\nexport const REMOVE_FLOWER = 'REMOVE_FLOWER';\n\nexport const ADD_CHARM = 'ADD_CHARM';\nexport const REMOVE_CHARM = 'REMOVE_CHARM';\n\nexport const SELECT_SLIVER_PIPE = 'SELECT_SLIVER_PIPE';\nexport const SELECT_HAND_SIZE = 'SELECT_HAND_SIZE';\n\nexport class CrystalShowroomAction {\n  handSize!: HandSize;\n  sliverPipe!: SliverPipe;\n  selectedDisplayCrystal!: string;\n  flower!: FileInfo;\n  charm!: FileInfo;\n  bead!: FileInfo;\n}\n\nexport class CrystalShowroomContextProps {\n  crystalRing!: CrystalRing;\n\n  selectedDisplayCrystal: string[] = [];\n\n  isFillCrystal!: boolean;\n\n  dispatch: React.Dispatch<any> = () => null;\n}\n\nexport const crystalShowroomInitState: CrystalShowroomContextProps = {\n  crystalRing: new CrystalRing(),\n  selectedDisplayCrystal: [],\n  isFillCrystal: false,\n  dispatch: () => null,\n};\n\nexport const crystalShowroomContext = React.createContext<CrystalShowroomContextProps>(crystalShowroomInitState);\n\nexport const crystalShowroomReducer = (state: CrystalShowroomContextProps, action: Action<CrystalShowroomAction>) => {\n  switch (action.type) {\n    case INIT_CRYSTAL_SHOWROOM: {\n      const crystalRing: CrystalRing = new CrystalRing();\n      crystalRing.setHandSize(action.data.handSize);\n      crystalRing.createBeads(action.data.handSize.crystalCount);\n      return Object.assign({}, state, { crystalRing, selectedDisplayCrystal: [] });\n    }\n    case ADD_CHARM: {\n      const selectedCrystals = state.selectedDisplayCrystal;\n      const crystalRing: CrystalRing = state.crystalRing;\n\n      const beads = crystalRing.beads.map((bead) =>\n        selectedCrystals.includes(bead.key) ? { ...bead, ...{ charm: action.data.charm } } : bead,\n      );\n      crystalRing.setBeads(beads);\n      return Object.assign({}, state, { crystalRing, selectedDisplayCrystal: [] });\n    }\n    case REMOVE_CHARM: {\n      const selectedCrystals = state.selectedDisplayCrystal;\n      const crystalRing: CrystalRing = state.crystalRing;\n\n      const beads = crystalRing.beads.map((bead) =>\n        selectedCrystals.includes(bead.key) ? { ...bead, ...{ charm: new FileInfo() } } : bead,\n      );\n      crystalRing.setBeads(beads);\n      return Object.assign({}, state, { crystalRing, selectedDisplayCrystal: [] });\n    }\n    case ADD_FLOWER_COVER_ON_LEFT: {\n      const selectedCrystals = state.selectedDisplayCrystal;\n      const crystalRing: CrystalRing = state.crystalRing;\n\n      const beads = crystalRing.beads.map((bead) =>\n        selectedCrystals.includes(bead.key) ? { ...bead, ...{ leftFlower: action.data.flower } } : bead,\n      );\n      crystalRing.setBeads(beads);\n\n      return Object.assign({}, state, { crystalRing, selectedDisplayCrystal: [] });\n    }\n    case ADD_FLOWER_COVER_ON_RIGHT: {\n      const selectedCrystals = state.selectedDisplayCrystal;\n      const crystalRing = state.crystalRing;\n\n      const beads = crystalRing.beads.map((bead) =>\n        selectedCrystals.includes(bead.key) ? { ...bead, ...{ rightFlower: action.data.flower } } : bead,\n      );\n\n      crystalRing.setBeads(beads);\n\n      return Object.assign({}, state, { crystalRing, selectedDisplayCrystal: [] });\n    }\n    case REMOVE_FLOWER: {\n      const selectedCrystals = state.selectedDisplayCrystal;\n      const crystalRing = state.crystalRing;\n\n      const beads = crystalRing.beads.map((bead) =>\n        selectedCrystals.includes(bead.key)\n          ? { ...bead, ...{ rightFlower: new FileInfo(), leftFlower: new FileInfo() } }\n          : bead,\n      );\n\n      crystalRing.setBeads(beads);\n\n      return Object.assign({}, state, { crystalRing, selectedDisplayCrystal: [] });\n    }\n    case SELECT_HAND_SIZE:\n      const handSize = action.data.handSize;\n      const crystalRing = state.crystalRing;\n\n      crystalRing.setHandSize(handSize);\n      crystalRing.createBeads(handSize.crystalCount);\n      crystalRing.setSliverPipe(new SelectedItem());\n\n      return Object.assign({}, state, { crystalRing });\n    case UPDATED_SELECTED_BEAD: {\n      const url = action.data.bead.url;\n      const crystalRing = state.crystalRing;\n      const newBeads = state.crystalRing.beads.map((item) =>\n        state.selectedDisplayCrystal.includes(item.key) ? { ...item, ...{ url } } : item,\n      );\n\n      const isFill = newBeads.every((bead) => !!bead.url);\n      crystalRing.setBeads(newBeads);\n\n      return Object.assign({}, state, { crystalRing, selectedDisplayCrystal: [], isFillCrystal: isFill });\n    }\n    case SELECT_DISPLAY_CRYSTAL_BEAD: {\n      const newBeads = state.selectedDisplayCrystal.concat(action.data.selectedDisplayCrystal);\n      return Object.assign({}, state, { selectedDisplayCrystal: newBeads });\n    }\n\n    case REMOVE_DISPLAY_SELECTED_CRYSTAL_BEAD:\n      const newBeads = state.selectedDisplayCrystal.filter((bead) => bead !== action.data.selectedDisplayCrystal);\n      return Object.assign({}, state, { selectedDisplayCrystal: newBeads });\n    case SELECT_SLIVER_PIPE: {\n      const selectedSliverPipe = action.data.sliverPipe;\n      const currentCrystalRing = state.crystalRing;\n      const newBeadsCount = currentCrystalRing.handSize.crystalCount - selectedSliverPipe.crystalCount;\n\n      currentCrystalRing.createBeads(newBeadsCount);\n      currentCrystalRing.setSliverPipe(selectedSliverPipe);\n\n      return Object.assign({}, state, {\n        crystalRing: currentCrystalRing,\n        selectedDisplayCrystal: [],\n      });\n    }\n    default:\n      return state;\n  }\n};\n","import {\n  UPDATED_SELECTED_BEAD,\n  SELECT_HAND_SIZE,\n  SELECT_SLIVER_PIPE,\n  ADD_CHARM,\n  REMOVE_CHARM,\n  INIT_CRYSTAL_SHOWROOM,\n  REMOVE_FLOWER,\n} from 'src/core/contexts/crystalShowroom/selected-list.context';\nimport SelectedItem, { HandSize, SliverPipe } from 'src/core/models/selection';\nimport { CHARM_OPTIONS } from 'src/core/constants/constants';\nimport { FileInfo } from 'src/core/models/file-info';\n\nexport const updateSelectedCrystal = (dispatch: React.Dispatch<any>) => (bead: SelectedItem) => {\n  dispatch({ type: UPDATED_SELECTED_BEAD, data: { bead } });\n};\n\nexport const updateSelectHandSize = (dispatch: React.Dispatch<any>, sliverPipe: SliverPipe) => (handSize: HandSize) => {\n  dispatch({ type: SELECT_HAND_SIZE, data: { handSize, sliverPipe } });\n};\n\nexport const updateSelectSliverHand = (dispatch: React.Dispatch<any>) => (item: SelectedItem) => {\n  dispatch({ type: SELECT_SLIVER_PIPE, data: { sliverPipe: item } });\n};\n\nexport const updateFlowerCover = (type: string, dispatch: React.Dispatch<any>) => (flower: FileInfo) => {\n  dispatch({ type, data: { flower } });\n};\n\nexport const removeFlowerCover = (dispatch: React.Dispatch<any>) => () => {\n  dispatch({ type: REMOVE_FLOWER });\n};\n\nexport const updateCharm = (dispatch: React.Dispatch<any>) => (charm: FileInfo) => {\n  dispatch({ type: ADD_CHARM, data: { charm } });\n};\n\nexport const removeCharm = (dispatch: React.Dispatch<any>) => () => {\n  dispatch({ type: REMOVE_CHARM });\n};\n\nexport const initCrystalRing = (dispatch: React.Dispatch<any>) => (handSize: HandSize) => {\n  dispatch({ type: INIT_CRYSTAL_SHOWROOM, data: { handSize } });\n};\n","import styled, { keyframes } from 'styled-components';\n\nconst bounceDelay = keyframes`\n0%,\n80%,\n100% {\n  transform: scale(0);\n}\n\n40% {\n  transform: scale(1);\n}\n`;\n\nconst LoadingAnimation = styled.div<any>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  transform: ${(props: { scale?: number }) => `scale(${props?.scale ?? 1})`};\n\n  .bounce1 {\n    animation-delay: -0.64s;\n  }\n\n  .bounce2 {\n    animation-delay: -0.48s;\n  }\n\n  .bounce3 {\n    animation-delay: -0.32s;\n  }\n\n  .bounce4 {\n    animation-delay: -0.16s;\n  }\n\n  div {\n    display: inline-block;\n    width: 18px;\n    height: 18px;\n    background-color: #277fd3;\n    border-radius: 100%;\n    margin: 0 5px;\n    animation: ${bounceDelay} 1.4s infinite ease-in-out both;\n  }\n`;\n\nexport default function LoadingBar(props: { scale?: number }) {\n  const { scale } = props;\n\n  return (\n    <LoadingAnimation scale={scale}>\n      <div className=\"bounce1\"></div>\n      <div className=\"bounce2\"></div>\n      <div className=\"bounce3\"></div>\n      <div className=\"bounce4\"></div>\n      <div className=\"bounce5\"></div>\n    </LoadingAnimation>\n  );\n}\n","export enum OrderBy {\n  Asc = 'asc',\n  Desc = 'desc',\n}\n","import { useEffect, useRef, useState } from 'react';\nimport { realtimeDB } from 'src/core/config/firebase.config';\nimport { OrderBy } from 'src/core/enums/orderby';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default function useHttpClient<T extends { id?: string }>(\n  tableName: string,\n  isReadData = true,\n  orderBy?: { path: string; by: OrderBy },\n) {\n  const [isLoading, setIsLoading] = useState(false);\n  const tableRef = useRef(realtimeDB.ref(tableName));\n\n  const [list, setList] = useState<T[]>([]);\n  const listRef = useRef<T[]>([]);\n\n  const getList = (id?: string, limitCount?: number): Promise<boolean> => {\n    setIsLoading(true);\n    const currentList = listRef.current;\n    const idRef = id ? tableRef.current.child(id) : tableRef.current;\n    const lastTimeStamp = (currentList[currentList.length - 1] as any)?.createdAt || 0;\n    const filterRef = !!limitCount\n      ? idRef.orderByChild('createdAt').startAfter(lastTimeStamp).limitToFirst(limitCount)\n      : idRef;\n\n    return new Promise((resolve) => {\n      filterRef.once('value', (snapshot) => {\n        if (snapshot.exists()) {\n          let dataList: T[] = [];\n          Object.entries<any>(snapshot.val()).forEach((entries) => {\n            const entry: T = { id: entries[0], ...entries[1] };\n            dataList = dataList.concat(entry);\n          });\n\n          listRef.current = limitCount ? currentList.concat(dataList) : dataList;\n          orderBy?.by === OrderBy.Desc ? setList(listRef.current.reverse()) : setList(listRef.current);\n          setIsLoading(false);\n          resolve(false);\n        } else {\n          !limitCount && setList([]);\n          setIsLoading(false);\n          resolve(true);\n        }\n\n        filterRef.off();\n      });\n    });\n  };\n\n  const post = (object: T, path?: string) => {\n    const apiPath = path ?? tableRef.current.push().key ?? uuidv4();\n    const newObject = JSON.parse(JSON.stringify(object));\n\n    return new Promise((resolve) => tableRef.current.child(apiPath).set(newObject, resolve));\n  };\n\n  const remove = (id: string) => {\n    return new Promise((resolve) => tableRef.current.child(id).remove(resolve));\n  };\n\n  const patch = (id: string, object: object) => {\n    return new Promise((resolve) => tableRef.current.child(id).update(object, resolve));\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    const ref = orderBy ? tableRef.current.orderByChild(orderBy.path) : tableRef.current;\n\n    if (isReadData) {\n      ref.on('value', (snapshot) => {\n        let list: T[] = [];\n        snapshot.forEach((childSnapshot) => {\n          const object: T = { id: childSnapshot.key, ...childSnapshot.val() };\n          list = list.concat(object);\n        });\n\n        setIsLoading(false);\n        orderBy?.by === OrderBy.Desc ? setList(list.reverse()) : setList(list);\n      });\n    }\n\n    return () => ref.off('value');\n  }, []);\n\n  return { list, isLoading, getList, post, remove, patch };\n}\n","import { useEffect, useRef, useState } from 'react';\nimport useHttpClient from 'src/utils/customer-hook/useHttpClient';\n\nexport function useInfiniteList(\n  tableName: string,\n  observeElement: Element | null,\n  rootElement: Element | null,\n  mutationElement: Element | null,\n): { list: any[]; isLoading: boolean } {\n  const { list: dataList, isLoading, getList } = useHttpClient(tableName, false, undefined);\n\n  const [isComplete, setIsComplete] = useState<boolean>(false);\n  const isIntersection = useRef(false);\n  const isSending = useRef(false);\n\n  const getPage = async () => {\n    if (!isComplete) {\n      getList('', 3).then((isComplete) => {\n        setIsComplete(isComplete);\n      });\n    }\n  };\n\n  const observeIntersection = (element: Element): IntersectionObserver => {\n    const intersectionObserver = new IntersectionObserver(\n      (entries) => {\n        isIntersection.current = entries[0].isIntersecting;\n        if (isSending.current) {\n          return;\n        }\n\n        if (isIntersection.current) {\n          isSending.current = true;\n          getPage();\n        }\n      },\n      { root: rootElement },\n    );\n\n    intersectionObserver.observe(element);\n\n    return intersectionObserver;\n  };\n\n  const observeMutation = (mutationElement: Element): MutationObserver => {\n    const mutationObserver = new MutationObserver((mutations: MutationRecord[]) => {\n      const isListChange = mutations[mutations.length - 1].addedNodes[0]?.nodeName == 'LI';\n      isSending.current = false;\n\n      if (isIntersection.current && isListChange) {\n        isSending.current = true;\n        getPage();\n      }\n    });\n    mutationObserver.observe(mutationElement, {\n      childList: true,\n      subtree: false,\n    });\n\n    return mutationObserver;\n  };\n\n  useEffect(() => {\n    setIsComplete(false);\n  }, [tableName]);\n\n  useEffect(() => {\n    let intersection: IntersectionObserver;\n    let mutation: MutationObserver;\n\n    if (observeElement && rootElement && mutationElement) {\n      intersection = observeIntersection(observeElement);\n      mutation = observeMutation(mutationElement);\n    }\n\n    return () => {\n      intersection && intersection.disconnect();\n      mutation && mutation.disconnect();\n    };\n  }, [tableName, observeElement, rootElement]);\n\n  return { list: dataList, isLoading };\n}\n","import { useEffect, useState } from 'react';\nimport LoadingBar from 'src/shared/loading-bar';\nimport { useInfiniteList } from 'src/utils/customer-hook/useInfiniteList';\nimport styled, { css } from 'styled-components';\n\nexport const InfiniteLayout = styled.ul`\n  ${(props: { layout: string }) =>\n    props.layout === 'grid' &&\n    css`\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(50px, 1fr));\n      grid-template-rows: 60px;\n      gap: 14px;\n      width: 100%;\n      height: 100%;\n      position: relative;\n    `}\n\n  li {\n    cursor: pointer;\n  }\n`;\n\nconst InfiniteItem = styled.li`\n  cursor: pointer;\n  padding: 4px;\n  position: relative;\n  ${(props: { isSelected: boolean }) =>\n    props.isSelected &&\n    css`\n      border: 1px solid gray;\n      border-radius: 20px;\n    `}\n`;\n\nexport const Container = styled.div`\n  position: relative;\n\n  .sensor {\n    position: absolute;\n    width: 100%;\n    height: 30px;\n    bottom: 0;\n    pointer-events: none;\n  }\n`;\n\nexport default function InfiniteList<T extends { id: string }>(props: {\n  layout: string;\n  tableName: string;\n  openSelect?: boolean;\n  openRemove?: boolean;\n  updateSelect?: (item: T) => void;\n  removeSelect?: (item: T) => void;\n}) {\n  const { layout, tableName, openSelect, openRemove, updateSelect, removeSelect } = props;\n  const [selected, setSelected] = useState<T>();\n  const [anchor, setAnchor] = useState<HTMLDivElement | null>(null);\n  const [viewport, setViewport] = useState<HTMLDivElement | null>(null);\n  const [mutationElement, setMutationElement] = useState<HTMLUListElement | null>(null);\n  const { list, isLoading } = useInfiniteList(tableName, anchor, viewport, mutationElement);\n\n  useEffect(() => {\n    if (list.length && openSelect) {\n      updateSelectItem(list[0]);\n    }\n  }, [list]);\n\n  const updateSelectItem = (item: T) => {\n    setSelected(item);\n    updateSelect && updateSelect(item);\n  };\n\n  const removeSelectedItem = (item: T) => {\n    removeSelect && removeSelect(item);\n  };\n\n  return (\n    <div className=\"h-full overflow-y-auto overflow-x-hidden\" ref={setViewport}>\n      <Container>\n        <InfiniteLayout layout={layout} ref={setMutationElement}>\n          {list.map((item) => (\n            <InfiniteItem\n              key={item.id}\n              onClick={() => updateSelectItem(item)}\n              isSelected={!!openSelect && item.id === selected?.id}\n            >\n              <img className=\"transform hover:scale-110\" src={item.url} />\n              {openRemove && (\n                <i\n                  className=\"icon-xs transform hover:scale-125 icon-x-mark absolute top-1 right-1\"\n                  onClick={() => removeSelectedItem(item)}\n                />\n              )}\n            </InfiniteItem>\n          ))}\n        </InfiniteLayout>\n        <div className=\"sensor\" ref={setAnchor}></div>\n      </Container>\n      <div className=\"mt-2\">{isLoading && <LoadingBar scale={0.5}></LoadingBar>}</div>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { FileInfo } from 'src/core/models/file-info';\nimport InfiniteList from 'src/shared/infiniteList';\n\nexport default function CharmAdder(props: { removeCharm: () => void; addCharm: (charm: FileInfo) => void }) {\n  const { addCharm, removeCharm } = props;\n  const [selected, setSelected] = useState<FileInfo>(new FileInfo());\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <div className=\"flex flex-row justify-around\">\n        <button onClick={() => addCharm(selected)} className=\"text-blue-500\">\n          加吊飾\n        </button>\n        <button onClick={() => removeCharm()} className=\"text-blue-500\">\n          移除吊飾\n        </button>\n      </div>\n      <div className=\"mt-6 flex-1 h-full overflow-auto\">\n        <InfiniteList\n          layout=\"grid\"\n          tableName=\"codeList/charms\"\n          openSelect={true}\n          updateSelect={(selected) => setSelected(selected)}\n        />\n      </div>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { FileInfo } from 'src/core/models/file-info';\nimport InfiniteList from 'src/shared/infiniteList';\n\nexport default function FlowerAdder(props: {\n  removeFlower: () => void;\n  updateLeft: (flower: FileInfo) => void;\n  updateRight: (flower: FileInfo) => void;\n}) {\n  const { updateLeft, updateRight, removeFlower } = props;\n  const [selected, setSelected] = useState<FileInfo>(new FileInfo());\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <div className=\"flex flex-row justify-around\">\n        <button onClick={() => updateLeft(selected)} className=\"text-blue-500\">\n          + 加在左邊\n        </button>\n        <button onClick={() => removeFlower()} className=\"text-blue-500\">\n          - 移除\n        </button>\n        <button onClick={() => updateRight(selected)} className=\"text-blue-500\">\n          + 加在右邊\n        </button>\n      </div>\n      <div className=\"flex-1\">\n        <InfiniteList\n          layout=\"grid\"\n          tableName=\"codeList/flowerCovers\"\n          openSelect={true}\n          updateSelect={(flower) => setSelected(flower)}\n        ></InfiniteList>\n      </div>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport SelectedItem from '../core/models/selection';\n\nexport default function RadioGroup<T extends SelectedItem>(props: {\n  list: T[];\n  groupName: string;\n  updateRadio: (item: T) => void;\n  defaultValue?: SelectedItem;\n}) {\n  const { groupName, list, defaultValue, updateRadio } = props;\n  const RadioItem = (props: { item: T }) => {\n    const { item } = props;\n    return (\n      <label\n        htmlFor={item.key}\n        className=\"shadow border border-gray-300 h-12 flex items-center p-4 cursor-pointer space-x-2 bg-transparent hover:bg-gray-100 font-bold\"\n      >\n        <input\n          type=\"radio\"\n          id={item.key}\n          value={item.value}\n          name={groupName}\n          checked={defaultValue && item.key === defaultValue.key}\n          onChange={() => {\n            updateRadio(item);\n          }}\n        />\n        <span>{item.text}</span>\n      </label>\n    );\n  };\n\n  return (\n    <div className=\"flex flex-col space-y-4 mt-6\">\n      {!!list?.length && list?.map((item) => <RadioItem key={item.key} item={item} />)}\n    </div>\n  );\n}\n","import firebase from 'firebase';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { USER } from 'src/core/constants/storage.constants';\nimport {\n  updateCharm,\n  initCrystalRing,\n  removeCharm,\n  removeFlowerCover,\n  updateFlowerCover,\n  updateSelectedCrystal,\n  updateSelectHandSize,\n  updateSelectSliverHand,\n} from 'src/core/contexts/crystalShowroom/crystalShowroom.action';\nimport { ControlPanelState } from 'src/core/enums/control-panel';\nimport { MainPath } from 'src/core/enums/main-path';\nimport User from 'src/core/models/allow-user';\nimport CrystalRing from 'src/core/models/crystal-ring';\nimport CharmAdder from 'src/crystal-showroom/components/charm-adder';\nimport FlowerAdder from 'src/crystal-showroom/components/flower-adder';\nimport InfiniteList from 'src/shared/infiniteList';\nimport { useDBList } from 'src/utils/customer-hook/useDBList';\nimport useHttpClient from 'src/utils/customer-hook/useHttpClient';\nimport { useListUrl } from 'src/utils/customer-hook/useListUrl';\nimport useStorage from 'src/utils/customer-hook/useStroage';\nimport {\n  ADD_FLOWER_COVER_ON_LEFT,\n  ADD_FLOWER_COVER_ON_RIGHT,\n  crystalShowroomContext,\n} from '../../core/contexts/crystalShowroom/selected-list.context';\nimport SelectedItem, { HandSize } from '../../core/models/selection';\nimport RadioGroup from '../../shared/redio-group';\n\nexport default function ControlPanel() {\n  const [currentState, setCurrentState] = useState<ControlPanelState>(ControlPanelState.HandSize);\n  const { crystalRing, isFillCrystal, dispatch } = useContext(crystalShowroomContext);\n  const { list: handSizes } = useHttpClient<HandSize>('handSize');\n  const { list: sliverPipes } = useHttpClient<HandSize>('sliverPipe');\n  const { getSession } = useStorage();\n  const { post } = useHttpClient<CrystalRing>(`crystalProducts/${getSession<User>(USER)?.phone ?? ''}`);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!!handSizes && !!handSizes.length) {\n      initCrystalRing(dispatch)(handSizes[0]);\n    }\n  }, [handSizes]);\n\n  const disableNextBtn = () =>\n    currentState == ControlPanelState.Charm || (currentState == ControlPanelState.Crystal && !isFillCrystal);\n\n  const prevState = () => {\n    setCurrentState((prevState) => prevState - 1);\n  };\n\n  const nextState = () => {\n    setCurrentState((prevState) => prevState + 1);\n  };\n\n  const onSubmit = () => {\n    crystalRing.setCreatedTime(firebase.database.ServerValue.TIMESTAMP);\n    post(crystalRing).then(() => history.push(MainPath.CompletePage));\n  };\n\n  return (\n    <div className=\"flex flex-col w-full h-full divide-y-2 divide-black space-y-4 py-16 mx-10 z-10\">\n      <h4 className=\"text-left text-3xl font-bold\">Crystal Life</h4>\n      <div className=\"flex-1 max-h-full overflow-hidden\">\n        {currentState === ControlPanelState.HandSize && (\n          <div className=\"w-full h-full flex flex-col p-2\">\n            <label className=\"text-left text-lg\">手圍</label>\n            <small className=\"text-left text-xs\">選擇適合你的手圍長度</small>\n            <div className=\"flex-1 h-full overflow-auto\">\n              <RadioGroup\n                list={handSizes}\n                defaultValue={crystalRing.handSize}\n                groupName=\"handSize\"\n                updateRadio={updateSelectHandSize(dispatch, sliverPipes[0])}\n              />\n            </div>\n          </div>\n        )}\n        {currentState === ControlPanelState.SliverPipe && (\n          <div className=\"w-full h-full flex flex-col p-2\">\n            <label className=\"text-left text-lg\">銀管</label>\n            <small className=\"text-left text-xs\">選擇適合你的銀圍長度</small>\n            <div className=\"flex-1 h-full overflow-auto\">\n              <RadioGroup\n                list={\n                  sliverPipes && sliverPipes.filter((item: SelectedItem) => item.value === crystalRing.handSize.value)\n                }\n                defaultValue={crystalRing.sliverPipe}\n                groupName=\"sliverPipe\"\n                updateRadio={updateSelectSliverHand(dispatch)}\n              />\n            </div>\n          </div>\n        )}\n        {currentState === ControlPanelState.Crystal && (\n          <div className=\"w-full h-full flex flex-col p-2\">\n            <label className=\"text-left text-lg\">水晶</label>\n            <small className=\"text-left text-xs\">在左邊產品中選取圓珠，在右邊選擇想要的水晶</small>\n            <div className=\"mt-6 flex-1 h-full overflow-auto\">\n              <InfiniteList\n                layout=\"grid\"\n                tableName=\"codeList/crystalImages\"\n                updateSelect={updateSelectedCrystal(dispatch)}\n              />\n            </div>\n          </div>\n        )}\n        {currentState === ControlPanelState.FlowerCover && (\n          <div className=\"w-full h-full flex flex-col p-2\">\n            <label className=\"text-left text-lg\">花蓋</label>\n            <small className=\"text-left text-xs\">在左邊產品中選取圓珠，在右邊選擇想要的花蓋，按下加在左邊或右邊</small>\n            <div className=\"mt-6 flex-1 h-full overflow-auto\">\n              <FlowerAdder\n                removeFlower={removeFlowerCover(dispatch)}\n                updateLeft={updateFlowerCover(ADD_FLOWER_COVER_ON_LEFT, dispatch)}\n                updateRight={updateFlowerCover(ADD_FLOWER_COVER_ON_RIGHT, dispatch)}\n              />\n            </div>\n          </div>\n        )}\n        {currentState === ControlPanelState.Charm && (\n          <div className=\"h-full w-full flex flex-col p-2\">\n            <label className=\"text-left text-lg\">吊飾</label>\n            <small className=\"text-left text-xs\">在左邊產品中選取圓珠，按下加吊飾，會在該圓珠左邊加入</small>\n            <div className=\"mt-6 flex-1 h-full overflow-auto\">\n              <CharmAdder addCharm={updateCharm(dispatch)} removeCharm={removeCharm(dispatch)}></CharmAdder>\n            </div>\n          </div>\n        )}\n      </div>\n      <div className=\"flex justify-evenly pt-2\">\n        <button onClick={() => prevState()} disabled={currentState == 0}>\n          上一步\n        </button>\n        {currentState !== ControlPanelState.Charm && (\n          <button onClick={() => nextState()} disabled={disableNextBtn()}>\n            下一步\n          </button>\n        )}\n        {currentState == ControlPanelState.Charm && <button onClick={() => onSubmit()}>提交</button>}\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  SELECT_DISPLAY_CRYSTAL_BEAD,\n  REMOVE_DISPLAY_SELECTED_CRYSTAL_BEAD,\n} from 'src/core/contexts/crystalShowroom/selected-list.context';\nimport Crystal from 'src/core/models/crystal';\nimport SelectedItem from 'src/core/models/selection';\nimport styled, { css } from 'styled-components';\n\nconst BeadDisplay = styled.div<any>`\n  position: absolute;\n  top: ${(props: { top: number }) => `${props.top}px`};\n  left: ${(props: { left: number }) => `${props.left}px`};\n  display: flex;\n  width: ${(props: { radius: number }) => `${props.radius}px`};\n  height: ${(props: { radius: number }) => `${props.radius}px`};\n  border-radius: 50%;\n  cursor: pointer;\n  align-items: center;\n  transform: rotate(${(props: { angular: number }) => `${props.angular}deg`});\n\n  ${(props: { isEmpty: boolean; isClicked: boolean }) =>\n    props.isEmpty &&\n    css`\n      background-color: #fffbe0;\n      border: 1px dashed rgb(234 146 82 / 80%);\n    `}\n\n  ${(props: { isClicked: boolean }) =>\n    props.isClicked &&\n    css`\n      border: 2px dashed #ea7e30;\n    `}\n\n  &: hover {\n    background-color: #f7f0c0;\n  }\n`;\n\nconst Flower = styled.img.attrs((props: { isLeft: boolean }) => ({ isLeft: props.isLeft ?? true }))`\n  position: absolute;\n  ${(props) => (props.isLeft ? `left: -25%` : `right: -25%`)};\n  width: 100%;\n  height: 100%;\n  content: '';\n  ${(props) => props.isLeft && `transform: rotate(180deg)`};\n`;\n\nconst Charm = styled.div`\n  height: 100px;\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  left: -50%;\n  top: 100%;\n  z-index: 10;\n  align-items: center;\n\n  i {\n    flex: 0 0 30px;\n  }\n\n  .charm-image {\n    padding: 4px;\n    border-radius: 20px;\n    margin-top: 2px;\n    width: 60px;\n    height: 60px;\n  }\n`;\n\nexport default function Bead(props: {\n  top: number;\n  left: number;\n  item: Crystal;\n  angular: number;\n  beadSize: number;\n  dispatch?: React.Dispatch<any>;\n}) {\n  const { top, left, item, angular, beadSize, dispatch } = props;\n  const [isClicked, setIsClicked] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsClicked(false);\n  }, [item]);\n\n  const onSelectBead = (item: SelectedItem) => {\n    setIsClicked((preState: boolean) => {\n      const newState = !preState;\n\n      if (dispatch) {\n        newState\n          ? dispatch({ type: SELECT_DISPLAY_CRYSTAL_BEAD, data: { selectedDisplayCrystal: item.key } })\n          : dispatch({ type: REMOVE_DISPLAY_SELECTED_CRYSTAL_BEAD, data: { selectedDisplayCrystal: item.key } });\n      }\n\n      return newState;\n    });\n  };\n\n  return (\n    <>\n      <BeadDisplay\n        top={top}\n        left={left}\n        isEmpty={!item?.url}\n        isClicked={isClicked}\n        radius={beadSize}\n        angular={angular}\n        onClick={() => onSelectBead(item)}\n      >\n        {item?.charm?.url && (\n          <Charm>\n            <i className=\"icon-xl icon-up-arrow\" />\n            <div className=\"charm-image\">\n              <img src={item.charm.url}></img>\n            </div>\n          </Charm>\n        )}\n        {item?.leftFlower?.url && <Flower src={item?.leftFlower.url} />}\n        <div>{item?.url && <img src={item?.url} className=\"w-full h-full\" />}</div>\n        {item?.rightFlower?.url && <Flower src={item?.rightFlower.url} isLeft={false} />}\n      </BeadDisplay>\n    </>\n  );\n}\n","import React from 'react';\nimport Crystal from 'src/core/models/crystal';\nimport CrystalRing from 'src/core/models/crystal-ring';\nimport { HandSize } from 'src/core/models/selection';\nimport Bead from 'src/shared/bead';\nimport styled, { css } from 'styled-components';\n\nconst ProductDisplay = styled.div<any>`\n  width: ${(props: { radius: number; beadSize: number }) => `${props.radius * 2 + props.beadSize}px`};\n  height: ${(props: { radius: number; beadSize: number }) => `${props.radius * 2 + props.beadSize}px`};\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: auto;\n  ${(props: { disabledEvent: number }) =>\n    props.disabledEvent &&\n    css`\n      pointer-events: none;\n    `};\n`;\n\nconst ProductInnerBorder = styled.div`\n  width: ${(props: { beadSize: number }) => `calc(100% - ${props.beadSize}px)`};\n  height: ${(props: { beadSize: number }) => `calc(100% - ${props.beadSize}px)`};\n  border: 4px solid #d1d5db;\n  border-radius: 50%;\n`;\n\nexport default function Product(props: {\n  crystalRing: CrystalRing;\n  dispatch?: React.Dispatch<any>;\n  disabled?: boolean;\n}) {\n  const { crystalRing, disabled, dispatch } = props;\n  const { beads, handSize } = crystalRing;\n\n  if (!handSize) {\n    return <></>;\n  }\n\n  const itemPosition = generateCrystalBeads(beads, handSize);\n\n  return (\n    <ProductDisplay radius={handSize.radiusWidth} beadSize={handSize.beadSize} disabledEvent={!!disabled}>\n      <ProductInnerBorder beadSize={handSize.beadSize}>\n        {itemPosition.map((data, index) => (\n          <Bead\n            key={data.item.key}\n            top={data.top}\n            left={data.left}\n            item={data.item}\n            dispatch={dispatch}\n            beadSize={handSize.beadSize}\n            angular={data.angular * index * -1}\n          />\n        ))}\n      </ProductInnerBorder>\n    </ProductDisplay>\n  );\n}\n\nfunction generateCrystalBeads(\n  selectedList: Crystal[],\n  handSize: HandSize,\n): { item: Crystal; top: number; left: number; angular: number }[] {\n  const containerX = handSize.radiusWidth;\n  const containerY = handSize.radiusWidth;\n  const circleAngular = 360 / handSize.crystalCount;\n  const circleHeight = (circleAngular * Math.PI) / 180;\n\n  return selectedList.map((item, index) => {\n    const left = Math.sin(circleHeight * index) * containerX + containerX;\n    const top = Math.cos(circleHeight * index) * containerY + containerY;\n\n    return { item, top, left, angular: circleAngular };\n  });\n}\n","import { useContext } from 'react';\nimport { crystalShowroomContext } from 'src/core/contexts/crystalShowroom/selected-list.context';\nimport Product from 'src/shared/product';\n\nexport default function ProductContainer() {\n  const { crystalRing, dispatch } = useContext(crystalShowroomContext);\n\n  return <Product crystalRing={crystalRing} dispatch={dispatch}></Product>;\n}\n","import ControlPanel from './components/control-panel';\nimport ProductContainer from './components/product-container';\nimport styled from 'styled-components';\nimport { useReducer } from 'react';\nimport React from 'react';\n\nimport {\n  crystalShowroomContext,\n  crystalShowroomInitState,\n  crystalShowroomReducer,\n} from '../core/contexts/crystalShowroom/selected-list.context';\n\nconst Showroom = styled.div`\n  display: flex;\n  height: 100%;\n`;\n\nconst ControlPanelContainer = styled.div`\n  height: 100%;\n  border-left: 1px solid;\n  flex: 0 0 385px;\n  display: flex;\n`;\n\nfunction CrystalShowroom() {\n  const [state, dispatch] = useReducer(crystalShowroomReducer, crystalShowroomInitState);\n  return (\n    <crystalShowroomContext.Provider\n      value={{\n        crystalRing: state.crystalRing,\n        selectedDisplayCrystal: state.selectedDisplayCrystal,\n        isFillCrystal: state.isFillCrystal,\n        dispatch,\n      }}\n    >\n      <Showroom className=\"App\">\n        <div className=\"flex flex-grow justify-center items-center\">\n          <ProductContainer />\n        </div>\n        <ControlPanelContainer className=\"bg-gray-50 relative\">\n          <div className=\"absolute w-full h-full novus-no-border-logo opacity-30 z-0\" />\n          <ControlPanel />\n        </ControlPanelContainer>\n      </Showroom>\n    </crystalShowroomContext.Provider>\n  );\n}\nexport default CrystalShowroom;\n","export enum FormControlType {\n  Phone = 'phone',\n  Name = 'name',\n  CrystalCount = 'crystalCount',\n  Account = 'account',\n  NotAssign = 'notAssign',\n}\n\nexport enum FormErrorType {\n  Format = 'formatError',\n  Required = 'requiredError',\n  Integer = 'IntegerError',\n  Auth = 'AuthError',\n  Account = 'AccountError',\n}\n","import { Link, NavLink, useHistory } from 'react-router-dom';\nimport { MainPath } from 'src/core/enums/main-path';\nimport Navigation from 'src/core/models/navigation';\nimport { useAuth } from 'src/utils/customer-hook/useAuth';\n\nexport default function DashboardNavigation(props: { navigation: Navigation[]; currentUrl: string }) {\n  const { navigation, currentUrl } = props;\n  const { adminLogout } = useAuth();\n  const history = useHistory();\n  const signOut = () => {\n    adminLogout();\n    history.push(MainPath.EmployeeLogin);\n  };\n\n  return (\n    <nav className=\"flex flex-col bg-blue-50 h-full border-r border-gray-300 p-5\" style={{ flex: '0 0 250px' }}>\n      <div className=\"flex-1 divide-y divide-indigo-300 \">\n        {navigation.map((nav) => (\n          <NavLink\n            key={nav.key}\n            className=\"flex justify-between py-4 hover:bg-blue-200\"\n            activeClassName=\"bg-blue-100\"\n            to={`${currentUrl}${nav.path}`}\n          >\n            <label className=\"text-xl\">{nav.text}</label>\n            <i className=\"icon icon-right-arrow\" />\n          </NavLink>\n        ))}\n      </div>\n      <button onClick={signOut}>登出</button>\n    </nav>\n  );\n}\n","import { FormControlType, FormErrorType } from 'src/core/enums/form.enum';\nimport { FormControl } from 'src/core/models/form';\nimport styled from 'styled-components';\n\nconst Warning = styled.div`\n  color: red;\n  font-size: 12px;\n`;\n\nexport default function FormErrorMsg(props: { errMsg: FormControl; name: FormControlType }) {\n  const { errMsg, name } = props;\n\n  return (\n    <>\n      {errMsg[name]?.[FormErrorType.Format] && <Warning>格式錯誤</Warning>}\n      {errMsg[name]?.[FormErrorType.Required] && <Warning>請填寫此項目</Warning>}\n      {errMsg[name]?.[FormErrorType.Integer] && <Warning>請輸入正整數</Warning>}\n      {errMsg[name]?.[FormErrorType.Auth] && <Warning>無權限瀏覽</Warning>}\n      {errMsg[name]?.[FormErrorType.Account] && <Warning>帳號密碼錯誤</Warning>}\n    </>\n  );\n}\n","import styled, { css } from 'styled-components';\r\nexport const Button1 = styled.button`\r\n  border: 1px solid #417deb;\r\n  border-radius: 5px;\r\n  padding: 4px;\r\n  background: #417deb;\r\n  color: white;\r\n  font-size: 14px;\r\n`;\r\n\r\n\r\nexport const SlideButton = styled.button`\r\n  flex: 0 0 60px;\r\n  height: 60px;\r\n  background-image: url(/assets/icon/chevron.svg);\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: 60px;\r\n  ${(props: { isLeft?: boolean }) =>\r\n    props.isLeft &&\r\n    css`\r\n      transform: scaleX(-1);\r\n    `}\r\n`;\r\n","import styled from 'styled-components';\n\nexport const FormField = styled.label`\n  .title {\n    font-size: 12px;\n    color: rgba(0, 0, 0, 0.54);\n    font-weight: bold;\n  }\n\n  width: 192px;\n  &: focus-within {\n    .title {\n      color: #3f51b5;\n    }\n\n    input: not([type= 'button' ]) {\n      border-bottom: 1px solid #3f51b5;\n    }\n  }\n\n  input[type='text'] {\n    width: 100%;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.54);\n\n    &:focus-visible {\n      outline: none;\n    }\n  }\n`;\n\nexport const Form1 = styled.form<any>`\n  display: flex;\n  flex-direction: ${(props: { direction?: string }) => props?.direction || 'row'};\n  justify-content: space-around;\n  padding: 10px;\n  border: 1px solid ${(props: { borderColor: string }) => props?.borderColor ?? '#dadada'};\n  margin: 12px;\n  box-shadow: 1px 1px 2px 0px #dadada, -1px -1px 2px 0px #dadada;\n\n  & > * {\n    margin-top: 4px;\n    margin-bottom: 4px;\n  }\n\n  input[type='button'] {\n    background: transparent;\n    cursor: pointer;\n  }\n\n  input: not([type= 'button' ], [type= 'radio' ]) {\n    width: 100%;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.54);\n\n    &:focus-visible {\n      outline: none;\n    }\n  }\n`;\n","import styled from 'styled-components';\r\n\r\nexport const Table = styled.div`\r\n  display: table;\r\n  width: 100%;\r\n\r\n  .table-cell {\r\n    padding: 7px;\r\n    text-align: center;\r\n  }\r\n\r\n  .table-header-group {\r\n    .table-cell {\r\n      font-weight: bold;\r\n      background-color: #ebd494;\r\n      border-bottom: 3px double black;\r\n    }\r\n  }\r\n\r\n  .table-row-group {\r\n    .table-row:nth-child(even) {\r\n      background-color: #fff4db;\r\n    }\r\n  }\r\n`;\r\n","import { FormControlType, FormErrorType } from 'src/core/enums/form.enum';\n\nexport class FromError {\n  [FormErrorType.Format]: boolean;\n  [FormErrorType.Required]: boolean;\n  [FormErrorType.Integer]: boolean;\n  [FormErrorType.Auth]: boolean;\n  [FormErrorType.Account]: boolean;\n}\n\nexport class FormControl {\n  [FormControlType.Phone]?: FromError;\n  [FormControlType.Name]?: FromError;\n  [FormControlType.CrystalCount]?: FromError;\n  [FormControlType.Account]?: FromError;\n  [FormControlType.NotAssign]: FromError;\n}\n","import { useReducer } from 'react';\nimport { FormControlType, FormErrorType } from 'src/core/enums/form.enum';\nimport { FormAction } from 'src/core/models/action';\nimport { FormControl } from 'src/core/models/form';\n\nexport function checkAccount(isAccountError: boolean) {\n  return {\n    type: FormErrorType.Account,\n    fieldName: FormControlType.Account,\n    isError: isAccountError,\n  };\n}\n\nexport function checkAuth(isAuthError: boolean) {\n  return {\n    type: FormErrorType.Auth,\n    fieldName: FormControlType.Account,\n    isError: isAuthError,\n  };\n}\n\nexport function checkFormat(e: React.FormEvent<HTMLInputElement>) {\n  return {\n    type: FormErrorType.Format,\n    fieldName: e.currentTarget.name,\n    isError: e.currentTarget.validity.patternMismatch,\n  };\n}\n\nexport function checkRequired(e: React.FormEvent<HTMLInputElement>) {\n  return {\n    type: FormErrorType.Required,\n    fieldName: e.currentTarget.name,\n    isError: e.currentTarget.validity.valueMissing,\n  };\n}\n\nexport function checkInteger(e: React.FormEvent<HTMLInputElement>) {\n  return {\n    type: FormErrorType.Integer,\n    fieldName: e.currentTarget.name,\n    isError: e.currentTarget.validity.stepMismatch,\n  };\n}\n\nexport default function useFormErrorMsg(initialState = new FormControl()) {\n  const reducer = (state: FormControl, action: FormAction): FormControl => {\n    const fieldName = (action.fieldName as FormControlType) ?? FormControlType.NotAssign;\n\n    if (action.type) {\n      return { ...state, [fieldName]: { ...state[fieldName], [action.type]: action.isError } };\n    }\n\n    return state;\n  };\n\n  return useReducer(reducer, initialState);\n}\n","import * as R from 'ramda';\n\nexport const isEmptyOrNil = R.either(R.isEmpty, R.isNil);\n\nexport const isNotEmptyOrNil = R.complement(isEmptyOrNil);\n","import { useEffect, useState } from 'react';\nimport { FormControlType } from 'src/core/enums/form.enum';\nimport { FormControl } from 'src/core/models/form';\nimport { isNotEmptyOrNil } from 'src/utils/transofrm/ramda-utilis';\n\nexport function useFormCheckValidate(error: FormControl, ...dependencies: FormControlType[]) {\n  const [validate, setValidate] = useState<boolean>(false);\n\n  useEffect(() => {\n    let valid = true;\n    dependencies.forEach((field) => {\n      if (isNotEmptyOrNil(error[field])) {\n        const copy = Object.assign({}, error[field]);\n        valid = valid && Object.values(copy).every((value) => !value);\n      } else {\n        valid = false;\n      }\n    });\n\n    setValidate(valid);\n  }, [error]);\n\n  return { validate, setValidate };\n}\n","import React, { useRef, useState } from 'react';\nimport { realtimeDB } from 'src/core/config/firebase.config';\nimport { FormControlType } from 'src/core/enums/form.enum';\nimport { HandSize } from 'src/core/models/selection';\nimport FormErrorMsg from 'src/shared/form-error-msg';\nimport { Button1 } from 'src/styles/components/button';\nimport { Form1, FormField } from 'src/styles/components/form';\nimport { Table } from 'src/styles/components/table';\nimport useFormErrorMsg, { checkInteger, checkRequired } from 'src/utils/customer-hook/useFormError';\nimport { useFormCheckValidate } from 'src/utils/customer-hook/useFormValidate';\nimport useHttpClient from 'src/utils/customer-hook/useHttpClient';\n\nexport default function HandSizeForm() {\n  const { list, post, remove } = useHttpClient<HandSize>('handSize');\n\n  const [name, setName] = useState('');\n  const [crystalSize, setCrystalSize] = useState<number>(8);\n  const [crystalCount, setCrystalCount] = useState<number>(0);\n\n  // validation\n  const [errMsg, setErrMsg] = useFormErrorMsg();\n  const { validate } = useFormCheckValidate(errMsg, FormControlType.Name, FormControlType.CrystalCount);\n\n  const createNewHandSize = () => {\n    post(new HandSize(name, crystalSize, crystalCount)).then(() => {\n      setName('');\n      setCrystalSize(8);\n      setCrystalCount(0);\n    });\n  };\n\n  return (\n    <>\n      <Form1 className=\"form-inline\">\n        <FormField>\n          <div className=\"title\">名稱: </div>\n          <input\n            type=\"text\"\n            className=\"px-1\"\n            name={FormControlType.Name}\n            value={name}\n            onInput={(e) => {\n              setErrMsg(checkRequired(e));\n              setName(e.currentTarget.value);\n            }}\n            required\n          ></input>\n          <FormErrorMsg errMsg={errMsg} name={FormControlType.Name}></FormErrorMsg>\n        </FormField>\n        <FormField>\n          <div className=\"title\">大小: </div>\n          <div className=\"flex justify-around\">\n            <div>\n              <input\n                id=\"8mm\"\n                type=\"radio\"\n                value={8}\n                name=\"crystalSize\"\n                checked={crystalSize === 8}\n                onChange={(e) => setCrystalSize(parseInt(e.currentTarget.value))}\n              ></input>\n              <label htmlFor=\"8mm\" className=\"cursor-pointer\">\n                8nm\n              </label>\n            </div>\n            <div>\n              <input\n                id=\"10mm\"\n                type=\"radio\"\n                value={10}\n                name=\"crystalSize\"\n                checked={crystalSize === 10}\n                onChange={(e) => setCrystalSize(parseInt(e.currentTarget.value))}\n              ></input>\n              <label htmlFor=\"10mm\" className=\"cursor-pointer\">\n                10nm\n              </label>\n            </div>\n          </div>\n        </FormField>\n        <FormField>\n          <div className=\"title\">數量: </div>\n          <input\n            type=\"number\"\n            className=\"px-1\"\n            name={FormControlType.CrystalCount}\n            step=\"1\"\n            required\n            value={crystalCount}\n            onInput={(e) => {\n              setErrMsg(checkInteger(e));\n              setErrMsg(checkRequired(e));\n              setCrystalCount(Number(e.currentTarget.value));\n            }}\n          ></input>\n          <FormErrorMsg errMsg={errMsg} name={FormControlType.CrystalCount}></FormErrorMsg>\n        </FormField>\n        <input type=\"button\" value=\"新增\" onClick={createNewHandSize} disabled={!validate} />\n      </Form1>\n      <Table className=\"table\">\n        <div className=\"table-header-group\">\n          <div className=\"table-cell\">編號</div>\n          <div className=\"table-cell\">名稱</div>\n          <div className=\"table-cell\">圓珠大小</div>\n          <div className=\"table-cell\">圓珠數量</div>\n          <div className=\"table-cell\"></div>\n        </div>\n        <div className=\"table-row-group\">\n          {list?.map((v: HandSize, index: number) => (\n            <div key={v.id} className=\"table-row\">\n              <div className=\"table-cell\">{index + 1}</div>\n              <div className=\"table-cell\">{v.text}</div>\n              <div className=\"table-cell\">{v.value}</div>\n              <div className=\"table-cell\">{v.crystalCount}</div>\n              <div className=\"table-cell\">\n                <Button1 onClick={() => remove(v.id)}>刪除</Button1>\n              </div>\n            </div>\n          ))}\n        </div>\n      </Table>\n    </>\n  );\n}\n","import React, { useRef, useState } from 'react';\nimport { FormControlType } from 'src/core/enums/form.enum';\nimport { SliverPipe } from 'src/core/models/selection';\nimport FormErrorMsg from 'src/shared/form-error-msg';\nimport { Button1 } from 'src/styles/components/button';\nimport { Form1, FormField } from 'src/styles/components/form';\nimport { Table } from 'src/styles/components/table';\nimport useFormErrorMsg, { checkInteger, checkRequired } from 'src/utils/customer-hook/useFormError';\nimport { useFormCheckValidate } from 'src/utils/customer-hook/useFormValidate';\nimport useHttpClient from 'src/utils/customer-hook/useHttpClient';\n\nexport default function SliverPipeForm() {\n  const { list, post, remove } = useHttpClient<SliverPipe>('sliverPipe');\n\n  const [name, setName] = useState('');\n  const [crystalSize, setCrystalSize] = useState<number>(8);\n  const [crystalCount, setCrystalCount] = useState<number>(0);\n\n  // validation\n  const [errMsg, setErrMsg] = useFormErrorMsg();\n  const { validate } = useFormCheckValidate(errMsg, FormControlType.Name, FormControlType.CrystalCount);\n\n  const createNewPipe = () => {\n    post(new SliverPipe(name, crystalSize, crystalCount)).then(() => {\n      setName('');\n      setCrystalSize(8);\n      setCrystalCount(0);\n    });\n  };\n\n  return (\n    <>\n      <Form1>\n        <FormField>\n          <div className=\"title\">名稱: </div>\n          <input\n            type=\"text\"\n            className=\"px-1\"\n            name={FormControlType.Name}\n            value={name}\n            onInput={(e) => {\n              setErrMsg(checkRequired(e));\n              setName(e.currentTarget.value);\n            }}\n            required\n          ></input>\n          <FormErrorMsg errMsg={errMsg} name={FormControlType.Name}></FormErrorMsg>\n        </FormField>\n        <FormField>\n          <div className=\"title\">大小: </div>\n          <div className=\"flex justify-around\">\n            <label className=\"cursor-pointer\">\n              <input\n                type=\"radio\"\n                value={8}\n                name=\"crystalSize\"\n                onChange={(e) => setCrystalSize(parseInt(e.currentTarget.value))}\n                checked={crystalSize === 8}\n              ></input>\n              8nm\n            </label>\n            <label className=\"cursor-pointer\">\n              <input\n                type=\"radio\"\n                value={10}\n                name=\"crystalSize\"\n                onChange={(e) => setCrystalSize(parseInt(e.currentTarget.value))}\n                checked={crystalSize === 10}\n              ></input>\n              10nm\n            </label>\n          </div>\n        </FormField>\n        <FormField>\n          <div className=\"title\">數量: </div>\n          <input\n            type=\"number\"\n            className=\"px-1\"\n            step=\"1\"\n            name={FormControlType.CrystalCount}\n            value={crystalCount}\n            required\n            onInput={(e) => {\n              setErrMsg(checkInteger(e));\n              setErrMsg(checkRequired(e));\n              setCrystalCount(parseInt(e.currentTarget.value));\n            }}\n          ></input>\n          <FormErrorMsg errMsg={errMsg} name={FormControlType.CrystalCount}></FormErrorMsg>\n        </FormField>\n        <input type=\"button\" value=\"新增\" onClick={createNewPipe} disabled={!validate} />\n      </Form1>\n      <Table className=\"table\">\n        <div className=\"table-header-group\">\n          <div className=\"table-cell\">編號</div>\n          <div className=\"table-cell\">名稱</div>\n          <div className=\"table-cell\">圓珠大小</div>\n          <div className=\"table-cell\">佔圓珠數量</div>\n          <div className=\"table-cell\"></div>\n        </div>\n        <div className=\"table-row-group\">\n          {list?.map((v: SliverPipe, index: number) => (\n            <div key={v.key} className=\"table-row\">\n              <div className=\"table-cell\">{index + 1}</div>\n              <div className=\"table-cell\">{v.text}</div>\n              <div className=\"table-cell\">{v.value}</div>\n              <div className=\"table-cell\">{v.crystalCount}</div>\n              <div className=\"table-cell\">\n                <Button1 onClick={() => remove(v.id)}>刪除</Button1>\n              </div>\n            </div>\n          ))}\n        </div>\n      </Table>\n    </>\n  );\n}\n","import { MainPath } from 'src/core/enums/main-path';\r\nimport Navigation from 'src/core/models/navigation';\r\n\r\nexport const CHARM_OPTIONS: any[] = [\r\n  {\r\n    key: 'CHARM_001',\r\n    text: 'default-charm',\r\n  },\r\n];\r\n\r\nexport const DASHBOARD_NAVIGATION: Navigation[] = [\r\n  {\r\n    key: 'ALLOW_LIST',\r\n    text: '權限列表',\r\n    path: MainPath.AllowList,\r\n  },\r\n  {\r\n    key: 'PRODUCT_LIST',\r\n    text: '產品清單',\r\n    path: MainPath.CrystalProductList,\r\n  },\r\n  {\r\n    key: 'HAND_SIZE',\r\n    text: '手圍',\r\n    path: MainPath.HandSizeForm,\r\n  },\r\n  {\r\n    key: 'SLIVER_PIPE',\r\n    text: '銀圍',\r\n    path: MainPath.SliverPipeForm,\r\n  },\r\n  {\r\n    key: 'CRYSTAL',\r\n    text: '水晶',\r\n    path: MainPath.CrystalBeadForm,\r\n  },\r\n  {\r\n    key: 'FLOWER',\r\n    text: '花蓋',\r\n    path: MainPath.FlowerCoverForm,\r\n  },\r\n  {\r\n    key: 'CHARM',\r\n    text: '吊飾',\r\n    path: MainPath.CharmForm,\r\n  },\r\n];\r\n","import styled from 'styled-components';\n\nexport const ProgressAnimation = styled.div`\n  transition: width 1s ease-in-out;\n  width: 100px;\n  height: 100%;\n  border-radius: inherit;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  padding-right: 10px;\n\n  span {\n    font-weight: bold;\n    color: white;\n  }\n`;\n\nexport const Bar = styled.div`\n  width: 100%;\n  height: 20px;\n  border: 1px solid;\n  border-radius: 20px;\n`;\n\nexport default function ProgressBar(props: { percent: number }) {\n  const { percent } = props;\n  return (\n    <Bar>\n      <ProgressAnimation className=\"bg-blue-600\" style={{ width: `${percent}%` }}>\n        <span>{`${percent}%`}</span>\n      </ProgressAnimation>\n    </Bar>\n  );\n}\n","import styled from 'styled-components';\r\nexport const Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, minmax(60px, 1fr));\r\n  grid-auto-rows: 60px;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n`;\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport class FileLink {\r\n  id!: string;\r\n  url!: string;\r\n\r\n  constructor(url: string) {\r\n    this.id = uuidv4();\r\n    this.url = url ?? '';\r\n  }\r\n}\r\n","import firebase from 'firebase';\nimport { useReducer } from 'react';\nimport Action from 'src/core/models/action';\n\nexport function startUpload(list: File[]): Action<FileUploadStatus, FileUploadStatusType> {\n  return { type: FileUploadStatusType.Start, data: { list } };\n}\n\nexport function uploading(completeFile: string): Action<FileUploadStatus, FileUploadStatusType> {\n  return { type: FileUploadStatusType.Running, data: { completedList: [completeFile] } };\n}\nexport function complete(completeFile: string): Action<FileUploadStatus, FileUploadStatusType> {\n  return { type: FileUploadStatusType.Running, data: { completedList: [completeFile] } };\n}\n\nexport enum FileUploadStatusType {\n  Start = 'start',\n  Running = 'running',\n  Completed = 'completed',\n  Pause = 'Pause',\n}\n\nclass FileUploadStatus {\n  isStart?: boolean = true;\n  isUploading?: boolean = false;\n  isCompleted?: boolean = false;\n\n  progress? = 0;\n  list?: File[] = [];\n  completedList?: string[] = [];\n  failList?: string[] = [];\n\n  constructor(uploadStatus?: FileUploadStatus) {\n    this.progress = uploadStatus?.progress ?? 0;\n    this.list = uploadStatus?.list ?? [];\n    this.completedList = uploadStatus?.completedList ?? [];\n    this.failList = uploadStatus?.failList ?? [];\n  }\n}\n\nexport default function useUploadFileStatus() {\n  const reducer = (state: FileUploadStatus, action: Action<FileUploadStatus, FileUploadStatusType>) => {\n    switch (action.type) {\n      case FileUploadStatusType.Start:\n        return { ...state, isStart: true, list: action.data.list, completedList: [] };\n      case FileUploadStatusType.Running:\n        if (!state.list?.length) {\n          return state;\n        }\n\n        const data = action.data;\n        const stateCompletedList = state.completedList ?? [];\n        const actionCompletedList = data.completedList ?? [];\n        const newCompletedList = stateCompletedList.concat(actionCompletedList);\n        const progress = (newCompletedList.length / state.list.length) * 100;\n        const percent = Math.round(progress);\n\n        const status =\n          newCompletedList.length === state.list.length\n            ? { isCompleted: true, isUploading: false }\n            : { isUploading: true, isCompleted: false };\n\n        return { ...state, ...status, isStart: false, progress: percent, completedList: newCompletedList };\n      default:\n        return state;\n    }\n  };\n\n  return useReducer(reducer, new FileUploadStatus());\n}\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function fillUUIDToArray(length: number) {\r\n  return new Array(length).fill('').map(() => uuidv4());\r\n}\r\n","import firebase from 'firebase';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { realtimeDB, storageRef } from 'src/core/config/firebase.config';\nimport { FileInfo } from 'src/core/models/file-info';\nimport { FileLink } from 'src/core/models/fileLink';\nimport SelectedItem from 'src/core/models/selection';\nimport ProgressBar from 'src/shared/progress-bar';\nimport { Button1 } from 'src/styles/components/button';\nimport { Grid } from 'src/styles/layout/grid';\nimport useDragFiles from 'src/utils/customer-hook/useDragFile';\nimport useHttpClient from 'src/utils/customer-hook/useHttpClient';\nimport useImageReader from 'src/utils/customer-hook/useImageReader';\nimport useUploadFileStatus, {\n  FileUploadStatusType,\n  startUpload,\n  uploading,\n} from 'src/utils/customer-hook/useUploadFileStatus';\nimport fillUUIDToArray from 'src/utils/transofrm/list-utilis';\nimport styled, { css } from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const Uploader = styled.label`\n  border: 1px dashed #406fbb;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  cursor: pointer;\n  position: relative;\n\n  .icon {\n    width: 32px;\n    height: 32px;\n    margin: auto;\n  }\n\n  input {\n    display: none;\n  }\n`;\n\nexport const UploaderOverlay = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  background-color: #a3c9eb52;\n  pointer-events: none;\n`;\n\nconst EmptyCell = styled.div`\n  background: #cccccc;\n  margin: 3px;\n`;\n\nconst WhiteBoard = styled.div`\n  width: 100%;\n  height: 100%;\n  background: white;\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n`;\nconst GridItem = styled.div`\n  ${(props: { isSelected: boolean }) =>\n    props.isSelected &&\n    css`\n      border: 1px solid;\n    `}\n  margin: 3px;\n  cursor: pointer;\n`;\n\nconst MAX_ARRAY_LENGTH = 32;\n\nexport function UploadArea(props: { tableName: string }) {\n  const { tableName } = props;\n  const uploadedFilesRef = useRef<HTMLInputElement>(null);\n\n  const [gridWidth] = useState<number>(300);\n  const [gridHeight] = useState<number>(400);\n  const [emptyList, setEmptyList] = useState<string[]>(fillUUIDToArray(MAX_ARRAY_LENGTH));\n  const [imageUrls, setImageUrls] = useState<FileLink[]>([]);\n  const [selectedImage, setSelectedImage] = useState<FileLink | null>();\n  const [uploadAreaRef, setUploadAreaRef] = useState<HTMLLabelElement | null>(null);\n  const { post } = useHttpClient(`codeList/${tableName}`);\n\n  const { isDragging, files } = useDragFiles(uploadAreaRef);\n  const readFile = useImageReader();\n\n  const [uploadStatus, setUploadStatus] = useUploadFileStatus();\n\n  const onUploadFile = (files: File[]) => {\n    if (!files.length) {\n      return;\n    }\n\n    setUploadStatus(startUpload(files));\n    for (const file of files) {\n      const task = storageRef.child(`${tableName}/${file.name}`).put(file, { contentType: 'image/jpeg' });\n      task.on('state_changed', null, null, () => {\n        const fileRef = task.snapshot.ref;\n        fileRef.getDownloadURL().then((url) => {\n          post(new FileInfo({ name: fileRef.name, url, createdAt: firebase.database.ServerValue.TIMESTAMP }));\n          setUploadStatus(uploading(url));\n        });\n      });\n    }\n  };\n\n  const readImage = (files: FileList | null) => {\n    if (files && files.length) {\n      Array.from(files).map((file) => {\n        readFile(file).then((image) => {\n          setImageUrls((urls) => urls.concat(image));\n          !selectedImage && setSelectedImage(image);\n        });\n      });\n\n      emptyList.length > 0 && setEmptyList((list) => fillUUIDToArray(list.length - files.length));\n    }\n  };\n\n  const uploadImage = () => {\n    const dragFiles = Array.from(files ?? []);\n    const normalFiles = Array.from(uploadedFilesRef?.current?.files ?? []);\n    onUploadFile(normalFiles.concat(dragFiles));\n  };\n\n  const removeUploadImage = (file: FileLink) => {\n    setImageUrls((prev) => {\n      const newImages = prev.filter((imageUrl) => imageUrl.id !== file.id);\n      file.id === selectedImage?.id && setSelectedImage(null);\n      !!newImages.length && setSelectedImage(newImages[0]);\n      return newImages;\n    });\n    setEmptyList((empty) => empty.concat(uuidv4()));\n  };\n\n  useEffect(() => {\n    if (uploadStatus.isCompleted) {\n      setImageUrls([]);\n      setEmptyList(fillUUIDToArray(MAX_ARRAY_LENGTH));\n      setSelectedImage(null);\n    }\n  }, [uploadStatus]);\n\n  useEffect(() => {\n    if (files?.length) {\n      readImage(files);\n    }\n  }, [files]);\n\n  return (\n    <div className=\"flex\" style={{ height: gridHeight }}>\n      <Uploader className=\"flex-1 relative\" ref={setUploadAreaRef}>\n        <div className=\"m-auto pointer-events-none\">\n          <i className=\"icon icon-upload-image\" />\n          <span>Upload Images</span>\n        </div>\n        <input\n          type=\"file\"\n          ref={uploadedFilesRef}\n          multiple\n          onChange={() => readImage(uploadedFilesRef?.current?.files ?? null)}\n        />\n        {selectedImage && (\n          <WhiteBoard>\n            <img src={selectedImage.url} />\n          </WhiteBoard>\n        )}\n        {isDragging && <UploaderOverlay></UploaderOverlay>}\n      </Uploader>\n      <div className=\"flex justify-center flex-col border\">\n        <Grid style={{ width: gridWidth }}>\n          {imageUrls.map((file: FileLink, index: number) => (\n            <GridItem\n              key={file.id}\n              className=\"relative\"\n              isSelected={file.id === selectedImage?.id}\n              onClick={() => setSelectedImage(file)}\n            >\n              <img src={file.url} />\n              <i\n                className=\"icon icon-x-mark absolute\"\n                style={{ top: 0, right: 0 }}\n                onClick={() => removeUploadImage(file)}\n              />\n            </GridItem>\n          ))}\n          {emptyList.map((key) => (\n            <EmptyCell key={key} />\n          ))}\n        </Grid>\n        {!uploadStatus.isUploading && (\n          <Button1 type=\"button\" onClick={uploadImage} disabled={!imageUrls.length}>\n            開始上傳\n          </Button1>\n        )}\n        {uploadStatus.isUploading && <ProgressBar percent={uploadStatus.progress ?? 0}></ProgressBar>}\n      </div>\n    </div>\n  );\n}\n","import { useCallback, useEffect, useState } from 'react';\n\nexport default function useDragFiles(targetElement: HTMLElement | null) {\n  const [isDragging, setIsDragging] = useState<boolean>(false);\n  const [files, setFiles] = useState<FileList>();\n\n  const handlerDragEnter = useCallback((event: MouseEvent) => {\n    event.preventDefault();\n    setIsDragging(true);\n  }, []);\n\n  const handlerDragLeave = useCallback((event: MouseEvent) => {\n    event.preventDefault();\n    setIsDragging(false);\n  }, []);\n\n  const handlerDragOver = useCallback((event: MouseEvent) => {\n    event.preventDefault();\n    setIsDragging(true);\n  }, []);\n\n  const handlerFileDrop = useCallback((event: DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    event.dataTransfer?.files && setFiles(event.dataTransfer?.files);\n    setIsDragging(false);\n  }, []);\n\n  useEffect(() => {\n    if (targetElement) {\n      targetElement.addEventListener('drop', handlerFileDrop);\n      targetElement.addEventListener('dragenter', handlerDragEnter);\n      targetElement.addEventListener('dragleave', handlerDragLeave);\n      targetElement.addEventListener('dragover', handlerDragOver);\n    }\n\n    return () => {\n      if (targetElement) {\n        targetElement.removeEventListener('drop', handlerFileDrop);\n        targetElement.removeEventListener('dragenter', handlerDragEnter);\n        targetElement.removeEventListener('dragleave', handlerDragLeave);\n        targetElement.removeEventListener('dragleave', handlerDragOver);\n      }\n    };\n  }, [targetElement]);\n\n  return { files, isDragging };\n}\n","import { FileLink } from 'src/core/models/fileLink';\n\nexport default function useImageReader() {\n  const readFile = (file: File) =>\n    new Promise<FileLink>((resolve) => {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        if (e.target?.result) {\n          resolve(new FileLink(e.target.result as string));\n        }\n      };\n\n      reader.readAsDataURL(file);\n    });\n\n  return readFile;\n}\n","import React from 'react';\nimport { realtimeDB, storageRef } from 'src/core/config/firebase.config';\nimport { FileInfo } from 'src/core/models/file-info';\nimport InfiniteList from 'src/shared/infiniteList';\nimport { UploadArea } from 'src/shared/upload-area';\nimport useHttpClient from 'src/utils/customer-hook/useHttpClient';\n\nexport default function UploadImageForm(props: { tableName: string }) {\n  const { tableName } = props;\n  const { remove } = useHttpClient('codeList');\n\n  const removeImage = (item: FileInfo) => {\n    storageRef.child(`${tableName}/${item.name}`).delete();\n    remove(`${tableName}/${item.id}`);\n  };\n\n  return (\n    <>\n      <UploadArea tableName={tableName}></UploadArea>\n      <hr></hr>\n      <div className=\"text-2xl mb-2\">已有產品圖</div>\n      <div className=\"max-h-full overflow-hidden\">\n        <InfiniteList\n          layout=\"grid\"\n          openRemove={true}\n          tableName={`codeList/${tableName}`}\n          removeSelect={removeImage}\n        ></InfiniteList>\n      </div>\n    </>\n  );\n}\n","export default class AllowUser {\r\n  id!: string;\r\n  key!: string;\r\n  name!: string;\r\n  phone!: string;\r\n  activate!: boolean;\r\n\r\n  constructor(phone: string, name: string) {\r\n    this.key = phone;\r\n    this.phone = phone;\r\n    this.name = name;\r\n    this.activate = false;\r\n  }\r\n}\r\n","import User from 'src/core/models/allow-user';\nimport { Table } from 'src/styles/components/table';\nimport { Form1, FormField } from 'src/styles/components/form';\nimport React, { useRef, useState } from 'react';\nimport useFormErrorMsg, { checkFormat, checkRequired } from 'src/utils/customer-hook/useFormError';\nimport FormErrorMsg from 'src/shared/form-error-msg';\nimport { useFormCheckValidate } from 'src/utils/customer-hook/useFormValidate';\nimport { Button1 } from 'src/styles/components/button';\nimport useHttpClient from 'src/utils/customer-hook/useHttpClient';\nimport { FormControlType } from 'src/core/enums/form.enum';\nimport { TAIWAN_PHONE_PATTERN } from 'src/core/constants/form.constants';\n\nexport default function AllowListController() {\n  const [phone, setPhone] = useState<string>('');\n  const [customerName, setCustomerName] = useState<string>('');\n  const { list, post, remove, patch } = useHttpClient<User>('allowList');\n\n  // validation\n  const [errMsg, setErrMsg] = useFormErrorMsg();\n  const { validate } = useFormCheckValidate(errMsg, FormControlType.Phone, FormControlType.Name);\n\n  const deleteUser = (id: string) => remove(id);\n  const newUser = () => {\n    post(new User(phone, customerName), phone).then((error) => !error && setPhone(''));\n  };\n  const updateStatus = (id: string, status: boolean) => patch(id, { activate: status });\n\n  const inputPhoneNumber = (e: React.FormEvent<HTMLInputElement>) => {\n    setErrMsg(checkFormat(e));\n    setPhone(e.currentTarget.value);\n  };\n\n  const inputCustomerName = (e: React.FormEvent<HTMLInputElement>) => {\n    setErrMsg(checkRequired(e));\n    setCustomerName(e.currentTarget.value);\n  };\n  return (\n    <>\n      <Form1>\n        <FormField>\n          <div className=\"title\">手機: </div>\n          <input\n            type=\"text\"\n            className=\"px-1\"\n            pattern={TAIWAN_PHONE_PATTERN}\n            value={phone}\n            name={FormControlType.Phone}\n            required\n            onInput={inputPhoneNumber}\n          ></input>\n          <FormErrorMsg errMsg={errMsg} name={FormControlType.Phone} />\n        </FormField>\n        <FormField>\n          <div className=\"title\">顧客姓名: </div>\n          <input\n            type=\"text\"\n            className=\"px-1\"\n            value={customerName}\n            name={FormControlType.Name}\n            onInput={inputCustomerName}\n            required\n          ></input>\n          <FormErrorMsg errMsg={errMsg} name={FormControlType.Name} />\n        </FormField>\n        <input type=\"button\" value=\"新增\" onClick={newUser} disabled={!validate} />\n      </Form1>\n      <Table className=\"table\">\n        <div className=\"table-header-group\">\n          <div className=\"table-cell\">編號</div>\n          <div className=\"table-cell\">手機號碼</div>\n          <div className=\"table-cell\">顧客姓名</div>\n          <div className=\"table-cell\">活動狀態</div>\n          <div className=\"table-cell\"></div>\n        </div>\n        <div className=\"table-row-group\">\n          {list &&\n            list?.map((v: User, index: number) => (\n              <li key={v.id} className=\"table-row\">\n                <div className=\"table-cell\">{index + 1}</div>\n                <div className=\"table-cell\">{v.phone}</div>\n                <div className=\"table-cell\">{v.name}</div>\n                <div className=\"table-cell\">\n                  <label>\n                    <input\n                      key={`${v.id}activated`}\n                      id=\"activate\"\n                      type=\"radio\"\n                      name={`activated${index}`}\n                      checked={!!v.activate}\n                      onChange={() => updateStatus(v.key, true)}\n                    />\n                    啟用\n                  </label>\n                  <label>\n                    <input\n                      key={`${v.id}deactivated`}\n                      id=\"deactivate\"\n                      type=\"radio\"\n                      name={`activated${index}`}\n                      checked={!v.activate}\n                      onChange={() => updateStatus(v.key, false)}\n                    />\n                    停用\n                  </label>\n                </div>\n                <div className=\"space-x-2 table-cell\">\n                  <Button1 onClick={() => deleteUser(v.id)}>刪除</Button1>\n                </div>\n              </li>\n            ))}\n        </div>\n      </Table>\n    </>\n  );\n}\n","// prettier-ignore\r\nexport const TAIWAN_PHONE_PATTERN = '^0{1}9{1}\\\\d{8}$';\r\nexport const INTEGER_NUMBER_STEP = '1';\r\n","import React, { useEffect, useState } from 'react';\nimport { OrderBy } from 'src/core/enums/orderby';\nimport User from 'src/core/models/allow-user';\nimport CrystalRing from 'src/core/models/crystal-ring';\nimport { MoreInfo } from 'src/shared/more-info';\nimport Product from 'src/shared/product';\nimport { SlideButton } from 'src/styles/components/button';\nimport { FormField } from 'src/styles/components/form';\nimport useHttpClient from 'src/utils/customer-hook/useHttpClient';\nimport styled from 'styled-components';\n\nconst SORT = { path: 'createdAt', by: OrderBy.Desc };\n\nexport default function CrystalProductList() {\n  const { list: allowList } = useHttpClient<User>('allowList');\n  const { list: products, getList } = useHttpClient<CrystalRing>('crystalProducts', false, SORT);\n\n  const [list, setList] = useState<CrystalRing[]>([]);\n  const [activeUser, setActiveUser] = useState<User | undefined>();\n  const [activeIndex, setActiveIndex] = useState<number>(0);\n\n  const selectUser = (value: string) => {\n    const user = allowList.find((user) => user.id === value);\n    setActiveUser(user);\n  };\n\n  const getTime = (time: number | Object) => (time ? new Date(time as number).toLocaleString() : '無時間資料');\n\n  useEffect(() => {\n    if (activeUser?.id) {\n      getList(activeUser.id);\n    }\n  }, [activeUser]);\n\n  const slide = (step: number) => setActiveIndex((prev) => prev + step);\n\n  return (\n    <div className=\"flex flex-col p-11 justify-center items-center\">\n      <FormField htmlFor=\"chooseUser\">\n        <div className=\"title\">選擇使用者電話:</div>\n        <input\n          list=\"allowList\"\n          type=\"text\"\n          name=\"chooseUser\"\n          id=\"chooseUser\"\n          value={activeUser?.id}\n          onChange={(e) => selectUser(e.currentTarget.value)}\n        ></input>\n        <datalist id=\"allowList\">\n          {allowList.map((user) => (\n            <option key={user.id} value={user.phone} />\n          ))}\n        </datalist>\n      </FormField>\n      <div className=\"m-16 flex justify-center items-center\" style={{ width: 800, height: 500 }}>\n        {!!products.length && (\n          <div className=\"flex w-full items-center justify-center relative\">\n            <div className=\"absolute flex flex-col items-center\">\n              <span>{activeUser?.name ?? '顧客'}</span>\n              <span>{getTime(products[activeIndex]?.createdAt)}</span>\n            </div>\n            <SlideButton isLeft={true} onClick={() => slide(-1)} disabled={products.length <= 1 || activeIndex === 0} />\n            <div className=\"flex-1 flex items-center\">\n              {<Product crystalRing={products[activeIndex]} disabled={true}></Product>}\n            </div>\n            <SlideButton\n              disabled={products.length <= 1 || activeIndex >= products.length - 1}\n              onClick={() => slide(1)}\n            />\n          </div>\n        )}\n\n        {!products.length && (\n          <div className=\"w-full h-full flex rounded flex-col justify-center items-center border-4 border-dashed\">\n            <i className=\"icon-5xl icon-empty-box\" />\n            查無資料\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import DashboardNavigation from 'src/crystal-dashboard/components/dashboard-navigation';\nimport HandSizeForm from 'src/crystal-dashboard/components/handsize-form';\nimport SliverPipeForm from 'src/crystal-dashboard/components/sliver-pipe-form';\nimport { BrowserRouter as Router, Switch, Route, useRouteMatch, Redirect } from 'react-router-dom';\nimport { MainPath } from 'src/core/enums/main-path';\nimport { DASHBOARD_NAVIGATION } from 'src/core/constants/constants';\nimport UploadImageForm from 'src/crystal-dashboard/components/upload-image-form';\nimport AllowListController from 'src/crystal-dashboard/components/allowlist-control';\nimport CrystalProductList from 'src/crystal-dashboard/components/crystal-product-list';\n\nexport default function CrystalDashboard() {\n  const { url } = useRouteMatch();\n\n  return (\n    <div className=\"h-full flex\">\n      <DashboardNavigation navigation={DASHBOARD_NAVIGATION} currentUrl={url} />\n      <div className=\"flex flex-col w-full h-full\">\n        <Switch>\n          <Route path={`${url}${MainPath.AllowList}`}>\n            <AllowListController />\n          </Route>\n          <Route path={`${url}${MainPath.CrystalProductList}`}>\n            <CrystalProductList />\n          </Route>\n          <Route path={`${url}${MainPath.HandSizeForm}`}>\n            <HandSizeForm />\n          </Route>\n          <Route path={`${url}${MainPath.SliverPipeForm}`}>\n            <SliverPipeForm />\n          </Route>\n          <Route path={`${url}${MainPath.CrystalBeadForm}`}>\n            <UploadImageForm key=\"crystalImages\" tableName=\"crystalImages\" />\n          </Route>\n          <Route path={`${url}${MainPath.FlowerCoverForm}`}>\n            <UploadImageForm key=\"flowerCovers\" tableName=\"flowerCovers\" />\n          </Route>\n          <Route path={`${url}${MainPath.CharmForm}`}>\n            <UploadImageForm key=\"charms\" tableName=\"charms\" />\n          </Route>\n          <Route exact path={`${url}`}>\n            <Redirect to={`${url}${MainPath.AllowList}`}></Redirect>\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { realtimeDB } from 'src/core/config/firebase.config';\nimport { USER } from 'src/core/constants/storage.constants';\nimport { FormControlType } from 'src/core/enums/form.enum';\nimport { MainPath } from 'src/core/enums/main-path';\nimport User from 'src/core/models/allow-user';\nimport FormErrorMsg from 'src/shared/form-error-msg';\nimport { Form1, FormField } from 'src/styles/components/form';\nimport useFormErrorMsg, { checkAuth } from 'src/utils/customer-hook/useFormError';\nimport { useFormCheckValidate } from 'src/utils/customer-hook/useFormValidate';\nimport { useAuth } from 'src/utils/customer-hook/useAuth';\nimport useKeyBoard from 'src/utils/customer-hook/userKey';\nimport useStorage from 'src/utils/customer-hook/useStroage';\nimport { isEmptyOrNil } from 'src/utils/transofrm/ramda-utilis';\n\nexport function UserLogin() {\n  const history = useHistory();\n  const { userLogin } = useAuth();\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const { setSession } = useStorage();\n  const { enter } = useKeyBoard();\n\n  // validation\n  const [errMsg, setErrMsg] = useFormErrorMsg();\n  const { validate, setValidate } = useFormCheckValidate(errMsg, FormControlType.Account);\n\n  const onVerifiedUser = () => {\n    if (isEmptyOrNil(phoneNumber)) {\n      return;\n    }\n\n    userLogin(phoneNumber).then((snapShot) => {\n      const user: User = snapShot.val();\n      const error = !snapShot.exists() || !user.activate;\n\n      setErrMsg(checkAuth(error));\n      if (error) {\n        return;\n      }\n      setSession(USER, user);\n      history.push(MainPath.CrystalShowroom);\n    });\n  };\n\n  return (\n    <div className=\"w-full h-full flex justify-center items-center flex-col novus-logo\">\n      <Form1 direction=\"column\" className=\"opacity-95 bg-white\" borderColor=\"black\">\n        <FormField>\n          <div className=\"title\">輸入您的手機號碼:</div>\n          <input\n            onInput={(e) => {\n              setValidate(true);\n              setPhoneNumber(e.currentTarget.value);\n            }}\n            onKeyPress={enter(onVerifiedUser)}\n          ></input>\n        </FormField>\n        {!validate && <FormErrorMsg errMsg={errMsg} name={FormControlType.Account}></FormErrorMsg>}\n        <input type=\"button\" onClick={onVerifiedUser} value=\"登入\" />\n      </Form1>\n    </div>\n  );\n}\n","export default function useKeyBoard() {\n  const enter = (callback: () => void) => (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter' || event.code === 'Enter') {\n      event.stopPropagation();\n      event.preventDefault();\n      callback();\n    }\n  };\n\n  return { enter };\n}\n","import firebase from 'firebase';\nimport React, { useEffect, useState } from 'react';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { FormControlType } from 'src/core/enums/form.enum';\nimport { MainPath } from 'src/core/enums/main-path';\nimport FormErrorMsg from 'src/shared/form-error-msg';\nimport { Form1, FormField } from 'src/styles/components/form';\nimport useFormErrorMsg, { checkAccount } from 'src/utils/customer-hook/useFormError';\nimport { useFormCheckValidate } from 'src/utils/customer-hook/useFormValidate';\nimport { useAuth } from 'src/utils/customer-hook/useAuth';\nimport useKeyBoard from 'src/utils/customer-hook/userKey';\nimport styled from 'styled-components';\n\nconst NovusLogo = styled.div`\n  width: 50%;\n  height: 100%;\n  background-color: #d7eaf1;\n  flex: 1;\n`;\n\nexport default function EmployeeLogin() {\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { adminLogin } = useAuth();\n  const { enter } = useKeyBoard();\n  const { isAdmin } = useAuth();\n\n  // validation\n  const [errMsg, setErrMsg] = useFormErrorMsg();\n  const { validate, setValidate } = useFormCheckValidate(errMsg, FormControlType.Account);\n\n  const inputEmail = (e: React.FormEvent<HTMLInputElement>) => {\n    setValidate(true);\n    setEmail(e.currentTarget.value);\n  };\n\n  const inputPassword = (e: React.FormEvent<HTMLInputElement>) => {\n    setValidate(true);\n    setPassword(e.currentTarget.value);\n  };\n\n  const onAuthVerified = () => {\n    adminLogin(email, password)\n      .then((userCredential) => {\n        history.push(MainPath.CrystalDashboard);\n      })\n      .catch((e) => {\n        setErrMsg(checkAccount(true));\n        setValidate(false);\n      });\n  };\n\n  return (\n    <>\n      {isAdmin ? (\n        <Redirect to={{ pathname: MainPath.CrystalDashboard }}></Redirect>\n      ) : (\n        <div className=\"w-full h-full flex justify-center items-center\">\n          <NovusLogo className=\"rect-novus-logo\"></NovusLogo>\n          <div className=\"flex flex-1 flex justify-center items-center\">\n            <Form1 direction=\"column\" className=\"items-center\" style={{ width: '260px' }}>\n              <FormField className=\"field \">\n                <div className=\"title\">帳號</div>\n                <input onInput={inputEmail} onKeyPress={enter(onAuthVerified)}></input>\n              </FormField>\n              <FormField className=\"field\">\n                <div className=\"title\">密碼</div>\n                <input type=\"password\" onInput={inputPassword} onKeyPress={enter(onAuthVerified)}></input>\n              </FormField>\n              <input type=\"button\" onClick={onAuthVerified} value=\"登入\" />\n              {!validate && <FormErrorMsg errMsg={errMsg} name={FormControlType.Account}></FormErrorMsg>}\n            </Form1>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { MainPath } from 'src/core/enums/main-path';\nimport LoadingBar from 'src/shared/loading-bar';\nimport { useAuth } from 'src/utils/customer-hook/useAuth';\n\nexport function CompletePage() {\n  const [redirect, setRedirect] = useState(false);\n  const { userLogout } = useAuth();\n\n  useEffect(() => {\n    setTimeout(() => {\n      setRedirect(true);\n      userLogout();\n    }, 3000);\n  }, []);\n  return (\n    <div className=\"w-full h-full flex flex-col justify-center items-center\">\n      <label className=\"text-2xl\">完成填寫</label>\n      <label className=\"text-sm mb-4\">正在將你導回到登入頁面</label>\n      <LoadingBar />\n      {redirect && <Redirect to={MainPath.UserLogin} />}\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { MainPath } from 'src/core/enums/main-path';\nimport { useAuth } from 'src/utils/customer-hook/useAuth';\n\nclass ProtectedRoute {\n  children!: JSX.Element | JSX.Element[];\n  [rest: string]: any;\n}\n\nexport const UserRoute = ({ children, ...rest }: ProtectedRoute) => {\n  const { isUser } = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isUser ? children : <Redirect to={{ pathname: MainPath.UserLogin, state: { from: location } }}></Redirect>\n      }\n    ></Route>\n  );\n};\n\nexport function AdminRoute({ children, ...rest }: ProtectedRoute) {\n  const { isAdmin } = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAdmin ? children : <Redirect to={{ pathname: MainPath.EmployeeLogin, state: { from: location } }}></Redirect>\n      }\n    ></Route>\n  );\n}\n","import './styles.css';\nimport CrystalShowroom from './crystal-showroom';\nimport CrystalDashboard from 'src/crystal-dashboard';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { MainPath } from 'src/core/enums/main-path';\nimport { UserLogin } from 'src/login/user-login';\nimport EmployeeLogin from 'src/login/employee-login';\nimport { CompletePage } from 'src/shared/complete-page';\nimport { AdminRoute, UserRoute } from 'src/shared/auth-router';\n\nexport default function App() {\n  return (\n    <>\n      <Switch>\n        <Route path={MainPath.UserLogin}>\n          <UserLogin />\n        </Route>\n        <UserRoute path={MainPath.CrystalShowroom}>\n          <CrystalShowroom />\n        </UserRoute>\n        <AdminRoute path={MainPath.CrystalDashboard}>\n          <CrystalDashboard />\n        </AdminRoute>\n        <Route path={MainPath.EmployeeLogin}>\n          <EmployeeLogin />\n        </Route>\n        <Route path={MainPath.CompletePage}>\n          <CompletePage />\n        </Route>\n        <Route exact path=\"/\">\n          <Redirect to={MainPath.UserLogin} />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { AuthProvider } from 'src/shared/auth-provider';\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nrender(\n  <BrowserRouter>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </BrowserRouter>,\n  rootElement,\n);\n"],"sourceRoot":""}